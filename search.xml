<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用1Panel阻止SSH爆破</title>
    <url>/2024/12/09/1PanelFail2ban/</url>
    <content><![CDATA[<h1 id="使用1Panel阻止SSH爆破"><a href="#使用1Panel阻止SSH爆破" class="headerlink" title="使用1Panel阻止SSH爆破"></a>使用1Panel阻止SSH爆破</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今日闲来无事,顺手看了一下1Panle的SSH登录日志,不看不知道,一看…….</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241209093010476.png" alt="image-20241209093010476"></p>
<blockquote>
<p>1Panel的登录日志在 主机&gt;SSH管理&gt;登录日志</p>
</blockquote>
<p>不过查了一下IP发现这还是华为云自己的IP?</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241209093316837.png" alt="image-20241209093316628"></p>
<h2 id="安装Fail2ban"><a href="#安装Fail2ban" class="headerlink" title="安装Fail2ban"></a>安装Fail2ban</h2><p>不管怎么说还是加个防止SSH爆破的<strong>Fail2ban</strong>比较好</p>
<p>在1Panel面板 <strong>工具箱&gt;Fail2ban</strong> 可以看见<strong>Fail2ban</strong>的运行状态,一般是未安装的,接下来就安装一下</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241209093730659.png" alt="image-20241209093730416"></p>
<div class="tabs" id="test"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test-1">RedHat / CentOS</button><button type="button" class="tab " data-href="test-2">Ubuntu / Debian</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test-1"><p><strong>1、安装 epel 源</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure>

<p><strong>2、安装 Fail2ban</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y fail2ban</span><br></pre></td></tr></table></figure>

<p><strong>3、启动 Fail2ban 服务</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start fail2ban</span><br></pre></td></tr></table></figure>

<p><strong>4、开机自启动</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable fail2ban</span><br></pre></td></tr></table></figure>

<p><strong>5、查看 Fail2ban 服务状态。</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status fail2ban</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test-2"><p><strong>1、安装 Fail2ban</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install fail2ban</span><br></pre></td></tr></table></figure>

<p><strong>2、Debian 12 及以上的版本需要手动安装 rsyslog</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install rsyslog</span><br></pre></td></tr></table></figure>

<p><strong>3、启动 Fail2ban 服务</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl start fail2ban</span><br></pre></td></tr></table></figure>

<p><strong>4、开机自启动</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable fail2ban</span><br></pre></td></tr></table></figure>

<p><strong>5、查看 Fail2ban 服务状态。</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl status fail2ban</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h3 id="由于我是Ubuntu-我就用Ubuntu进行演示了"><a href="#由于我是Ubuntu-我就用Ubuntu进行演示了" class="headerlink" title="由于我是Ubuntu,我就用Ubuntu进行演示了"></a>由于我是Ubuntu,我就用Ubuntu进行演示了</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241209094239674.png" alt="image-20241209094239335"></p>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241209094331213.png"></p>
<h4 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h4><p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241209094633659.png" alt="image-20241209094633456"></p>
<h4 id="查看运行状态"><a href="#查看运行状态" class="headerlink" title="查看运行状态"></a>查看运行状态</h4><p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241209094706699.png" alt="image-20241209094706494"></p>
<p>运行正常即可</p>
<h2 id="配置Fail2ban"><a href="#配置Fail2ban" class="headerlink" title="配置Fail2ban"></a>配置Fail2ban</h2><p>接下来返回1Panel的 <strong>工具箱&gt;Fail2ban</strong></p>
<p>看到以下界面即可,你可以按需更改相应的配置,基本上保持默认即可,这样就大功告成啦</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241209094847144.png" alt="image-20241209094846912"></p>
]]></content>
      <tags>
        <tag>1panel</tag>
      </tags>
  </entry>
  <entry>
    <title>CloudFlare免费内网穿透</title>
    <url>/2024/12/08/CloudFlareIntranetPenetration/</url>
    <content><![CDATA[<h1 id="CloudFlare免费内网穿透"><a href="#CloudFlare免费内网穿透" class="headerlink" title="CloudFlare免费内网穿透"></a>CloudFlare免费内网穿透</h1><div class="note info simple"><p>CloudFlare控制台有所改变,需要有一定的变通能力</p>
</div>

<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li>一个<strong>CloudFlare</strong>账号,如果没有就去<a href="https://dash.cloudflare.com/sign-up">CloudFlare</a>注册   <del>这不废话</del></li>
<li>一个可以添加到<strong>CloudFlare</strong>的域名</li>
</ul>
<h2 id="开通ZeroTrust服务"><a href="#开通ZeroTrust服务" class="headerlink" title="开通ZeroTrust服务"></a>开通ZeroTrust服务</h2><p>登录你的<strong>CloudFlare</strong>账号,在主页左侧点击<strong>Zero Trust</strong></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213140216809.png" alt="image-20241213140216397"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213140506220.png" alt="image-20241213140505952"></p>
<p>这里随便取个名字,选择免费套餐即可</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213140607046.png" alt="image-20241213140606803"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213140654060.png" alt="image-20241213140653815"></p>
<p>然后你会看见一个让你添加付款方式的界面</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213140807803.png" alt="image-20241213140807571"></p>
<p>这里不需要添加付款方式,直接回到CloudFlare主页,<a href="https://dash.cloudflare.com/">https://dash.cloudflare.com</a></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213140920713.png" alt="image-20241213140920479"></p>
<p>再次点击<strong>ZeroTrust</strong>,这样就没有添加付款方式直接结进来了</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213141035796.png" alt="image-20241213141035460"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213141105267.png" alt="image-20241213141104936"></p>
<h2 id="新建隧道"><a href="#新建隧道" class="headerlink" title="新建隧道"></a>新建隧道</h2><p>在左侧<strong>Networks</strong>的下拉菜单里进入<strong>Tunnels</strong></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213141201362.png" alt="image-20241213141201205"></p>
<p>点击<code>Add a tunnel</code>新建一条隧道,选择<strong>CloudFlare</strong>,随便取个名字</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213141312280.png" alt="image-20241213141311917"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213141434785.png" alt="image-20241213141434557"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213141532999.png" alt="image-20241213141532744"></p>
<p>点击<code>Save tunnel</code>保存隧道,根据你的系统选择下载的应用程序</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213141735963.png" alt="image-20241213141735618"></p>
<h2 id="安装并运行连接器"><a href="#安装并运行连接器" class="headerlink" title="安装并运行连接器"></a>安装并运行连接器</h2><p>我这里以<strong>Windows64位</strong>操作系统为例,下载完成直接运行</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213142213480.png" alt="image-20241213142212614"></p>
<p>安装完成不会出现任何提示,回到<strong>CloudFlare</strong>,复制下方的一键安装命令</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213142452811.png" alt="image-20241213142452585"></p>
<p>在搜索栏搜索<code>CMD</code>,右键<code>命令提示符</code>,选择<code>以管理员身份运行</code></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213142554108.png" alt="image-20241213142553673"></p>
<p>粘贴从<strong>CloudFlare</strong>复制的代码,运行</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213142634555.png" alt="image-20241213142634368"></p>
<p>这样就成功安装完成了</p>
<h2 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h2><p>接下来配置域名</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213142835734.png" alt="image-20241213142835532"></p>
<ul>
<li><p>**子域名(Subdomain)**填入任意的子域名,</p>
</li>
<li><p><strong>域名(Domain)<strong>就选择托管在</strong>CloudFlare</strong>的域名</p>
</li>
<li><p>**路径(Path)**一般不需要管</p>
</li>
<li><p>**类型(Type)**按需选择,一些特殊协议需要额外配置,详情请访问CloudFlare具体文档</p>
</li>
<li><p><strong>URL</strong>填入需要穿透的地址,本机就是<code>127.0.0.1:</code>后面加端口号</p>
</li>
</ul>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213143349623.png" alt="image-20241213143349402"></p>
<p>因为我需要内网穿透的是一个开在<code>3000</code>端口的<code>HTTP</code>网站,所以<strong>Type</strong>选择的HTTP,<strong>URL</strong>填的<code>127.0.0.1:3000</code></p>
<p>最后点击<strong>Save hostname</strong>保存完成,这里的状态变为<strong>HEALTHY</strong>就是正常运行了</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213143646251.png" alt="image-20241213143646020"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241213143941514.png" alt="image-20241213143941340"></p>
<p>访问一下对应的网址,也是正常访问了,这样,<strong>CloudFlare</strong>搭建的内网穿透服务就成功了</p>
]]></content>
      <tags>
        <tag>CloudFlare</tag>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>CloudFlare搭建无限邮箱</title>
    <url>/2024/12/14/CloudFlareMail/</url>
    <content><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li>一个<strong>CloudFlare</strong>账号,如果的话没有就去<a href="https://dash.cloudflare.com/sign-up">CloudFlare</a>注册   <del>这不废话</del></li>
<li>一个可以添加到CloudFlare的域名</li>
</ul>
<h2 id="收邮件"><a href="#收邮件" class="headerlink" title="收邮件"></a>收邮件</h2><p>进入<strong>CloudFlare</strong>首页,点击你的域名进入详情页,点击左侧<code>电子邮件</code></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214190715185.png" alt="image-20241214190714728"></p>
<p>点击<strong>开始使用</strong></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214190755498.png" alt="image-20241214190755304"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214190902593.png" alt="image-20241214190902341"></p>
<p>这里需要注意一下</p>
<ul>
<li><p>自定义地址就是<code>@域名</code>前面的部分,比如我填<code>admin</code>,邮箱地址就是<em><a href="mailto:&#97;&#x64;&#109;&#x69;&#110;&#64;&#77;&#x61;&#x70;&#108;&#x65;&#x4c;&#101;&#x61;&#x66;&#49;&#x31;&#x32;&#57;&#x2e;&#117;&#x73;&#46;&#107;&#x67;">&#97;&#x64;&#109;&#x69;&#110;&#64;&#77;&#x61;&#x70;&#108;&#x65;&#x4c;&#101;&#x61;&#x66;&#49;&#x31;&#x32;&#57;&#x2e;&#117;&#x73;&#46;&#107;&#x67;</a></em></p>
</li>
<li><p>目标位置就是向上方的邮箱地址发送邮件后,用于接受邮件的地址,也就是发送给上方的邮件会转发到这个地址</p>
</li>
</ul>
<p>点击<strong>创建并验证</strong>,这里状态变成<code>待验证</code></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214191157391.png" alt="image-20241214191157174"></p>
<p>去刚刚你填的<code>目标位置</code>的邮箱找到<strong>CloudFlare</strong>的验证邮件,点击<code>Verify email address</code>验证</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214193527705.png" alt="image-20241214193527431"></p>
<p>出现以下界面就是验证成功了</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214193702624.png" alt="image-20241214193702394"></p>
<p>返回<strong>CloudFlare</strong>,可以看见状态变为<strong>已验证</strong>,点击<code>继续</code></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214193726585.png" alt="image-20241214193726381"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214193826175.png" alt="image-20241214193825924"></p>
<p>可以看见<strong>DNS记录</strong>目前都是<strong>缺失</strong>状态,直接点击<code>添加记录并启用</code>,<strong>CloudFlare</strong>会自动补全<strong>DNS解析</strong></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214194011081.png" alt="image-20241214194010771">	这样,使用<strong>CloudFlare</strong>收邮件就完成了,可以发送邮件测试一下</p>
<p>另外,点击<strong>路由规则</strong>,编辑下方的<code>Catch-all 地址</code></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214194319552.png" alt="image-20241214194319275"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214194415575.png" alt="image-20241214194415366"></p>
<p>将操作改为<strong>发送到电子邮件</strong>,将目标位置改为你之前填写的邮件地址,点击保存,将状态改为<strong>活动</strong></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214194618741.png" alt="image-20241214194618532"></p>
<p>这样就可以让发送给任意<code>xxx@你的域名</code>的邮件发送给你,相当于直接拥有了无限多的邮箱</p>
<p>收邮件就完成了,有发送邮件需求的可以继续往下配置发邮件</p>
<h2 id="发邮件"><a href="#发邮件" class="headerlink" title="发邮件"></a>发邮件</h2><p>关于发邮件,这里只写<strong>outlook</strong>方式</p>
<h3 id="OutLook"><a href="#OutLook" class="headerlink" title="OutLook"></a>OutLook</h3><p>打开<a href="https://outlook.live.com/">outlook</a>, 登录账号, 点击右上角设置 &gt; 查看全部outlook设置 &gt; 邮件 &gt; 同步电子邮件 &gt; 管理或选择主别名</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214195250002.png" alt="image-20241214195249740"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214195522158.png" alt="image-20241214195521956"></p>
<p>点击<code>添加电子邮件</code>,选择<code>将现有电子邮件地址添加为 Microsoft 帐户别名</code>,填入你的邮箱地址,点击<code>添加别名</code>,<code>验证</code>,<code>发送电子邮件</code></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214195632194.png" alt="image-20241214195632018"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214195810839.png" alt="image-20241214195810333"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs/20241214195835183.png" alt="image-20241214195834980"></p>
<p>在你的邮箱内找到验证邮件, 点击确定即可</p>
]]></content>
      <tags>
        <tag>CloudFlare</tag>
        <tag>邮箱</tag>
      </tags>
  </entry>
  <entry>
    <title>使用CloudFlare搭建反向代理</title>
    <url>/2024/11/29/CloudFlareReverseProxy/</url>
    <content><![CDATA[<h1 id="使用CloudFlare搭建反向代理"><a href="#使用CloudFlare搭建反向代理" class="headerlink" title="使用CloudFlare搭建反向代理"></a>使用CloudFlare搭建反向代理</h1><div class="note warning simple"><p>[2024年12月03日] CloudFlare更新 <a href="https://www.cloudflare.com/zh-cn/terms/">服务条款 2.2.1</a><br><strong>禁止包括但不限于导致（直接或间接）您的 Cloudflare 代理域的流量发送到非 Cloudflare 为该域分配的 IP 地址</strong><br><strong>禁止使用服务提供虚拟专用网络或其他类似的代理服务</strong></p>
<p>若任使用请知晓可能出现的风险, 包括但不限于: <strong>暂停或终止您对cloudflare服务的使用或访问</strong> 等等。</p>
</div>

<div class="note info simple"><p>FREE套餐CloudFlare每日提供 <strong>10w</strong> 请求的免费额度,个人用完全足够,但并不能保证很多人同时使用,强烈建议仅自用</p>
</div>

<div class="note info simple"><p>CloudFlare控制台有所改变,需要有一定的变通能力</p>
</div>

<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li>一个<strong>CloudFlare</strong>账号,如果没有就去<a href="https://dash.cloudflare.com/sign-up">CloudFlare</a>注册   <del>这不废话</del></li>
<li>一个可以添加到CloudFlare的域名(可选),主要是CloudFlare的一些域名被墙,导致无法直接访问</li>
</ul>
<h2 id="创建并配置Workers"><a href="#创建并配置Workers" class="headerlink" title="创建并配置Workers"></a>创建并配置Workers</h2><h3 id="创建-Workers"><a href="#创建-Workers" class="headerlink" title="创建 Workers"></a>创建 Workers</h3><p>在 Cloudflare 的面板左侧点击 <strong>Workers 和 Pages</strong> 进入后点击<strong>创建</strong>按钮</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs202411291237524.png"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs202411291240960.png"></p>
<p>点击<strong>创建Workers</strong>按钮</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs202411291242134.png"></p>
<p>名字随便填,我这里就直接填proxy了,然后点击<strong>部署</strong><br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291243794.png"></p>
<p>点击<strong>编辑代码</strong>进入代码编辑页面<br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291245172.png"></p>
<p>在这里你有两个选择</p>
<ul>
<li>通用反代(优点:可直接反代任意网站,缺点:容易寄,如果泄露被滥用的几率大)</li>
<li>指定反代(优点:稳定,不容易寄,缺点:需要一条条的配置需要反代的地址)</li>
</ul>
<p>个人推荐使用<strong>指定反代</strong>,按需选择</p>
<h3 id="指定反代"><a href="#指定反代" class="headerlink" title="指定反代"></a>指定反代</h3><p>将以下代码覆盖掉左侧代码框的内容</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(<span class="string">&#x27;fetch&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">  event.<span class="title function_">respondWith</span>(<span class="title function_">handleRequest</span>(event.<span class="property">request</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 域名映射表</span></span><br><span class="line"><span class="keyword">const</span> domainMappings = &#123;</span><br><span class="line">  <span class="string">&quot;/steam-store&quot;</span>: <span class="string">&quot;https://store.steampowered.com&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/steam-api&quot;</span>: <span class="string">&quot;https://api.steampowered.com&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> specialCases = &#123;</span><br><span class="line">  <span class="string">&quot;*&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;DELETE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;DELETE&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleSpecialCases</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> rules = specialCases[<span class="string">&quot;*&quot;</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(rules)) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (value) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&quot;KEEP&quot;</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&quot;DELETE&quot;</span>:</span><br><span class="line">        request.<span class="property">headers</span>.<span class="title function_">delete</span>(key);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        request.<span class="property">headers</span>.<span class="title function_">set</span>(key, value);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果是访问根目录就返回一个HTML</span></span><br><span class="line"><span class="keyword">if</span> (url.<span class="property">pathname</span> === <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">`</span></span><br><span class="line"><span class="string">      &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">          &lt;style&gt;</span></span><br><span class="line"><span class="string">            body &#123;</span></span><br><span class="line"><span class="string">              display: flex;</span></span><br><span class="line"><span class="string">              justify-content: center;</span></span><br><span class="line"><span class="string">              align-items: center;</span></span><br><span class="line"><span class="string">              height: 100vh;</span></span><br><span class="line"><span class="string">              margin: 0;</span></span><br><span class="line"><span class="string">              background-color: #f9f9f9;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            h1 &#123;</span></span><br><span class="line"><span class="string">              font-family: Arial, sans-serif;</span></span><br><span class="line"><span class="string">              color: #333;</span></span><br><span class="line"><span class="string">              text-align: center;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">          &lt;h1&gt;Why don&#x27;t you play Genshin Impact?&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">      &lt;/html&gt;</span></span><br><span class="line"><span class="string">    `</span>, &#123;</span><br><span class="line">      <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/html&quot;</span> &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> basePath = <span class="title class_">Object</span>.<span class="title function_">keys</span>(domainMappings).<span class="title function_">find</span>(<span class="function"><span class="params">path</span> =&gt;</span> url.<span class="property">pathname</span>.<span class="title function_">startsWith</span>(path));</span><br><span class="line">  <span class="keyword">if</span> (!basePath) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">&quot;Path not found in domain mappings&quot;</span>, &#123; <span class="attr">status</span>: <span class="number">404</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> targetBase = domainMappings[basePath];</span><br><span class="line">  <span class="keyword">const</span> targetPath = url.<span class="property">pathname</span>.<span class="title function_">slice</span>(basePath.<span class="property">length</span>) + url.<span class="property">search</span> + url.<span class="property">hash</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> targetUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(targetPath, targetBase);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> modifiedRequest = <span class="keyword">new</span> <span class="title class_">Request</span>(targetUrl, &#123;</span><br><span class="line">    <span class="attr">headers</span>: request.<span class="property">headers</span>,</span><br><span class="line">    <span class="attr">method</span>: request.<span class="property">method</span>,</span><br><span class="line">    <span class="attr">body</span>: request.<span class="property">body</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;follow&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">handleSpecialCases</span>(modifiedRequest);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(modifiedRequest);</span><br><span class="line">  <span class="keyword">const</span> modifiedResponse = <span class="keyword">new</span> <span class="title class_">Response</span>(response.<span class="property">body</span>, response);</span><br><span class="line">  modifiedResponse.<span class="property">headers</span>.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> modifiedResponse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note info modern"><p>可修改 <em>域名映射表(domainMappings)</em> 中的内容为自己想要的网站</p>
</div>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 域名映射表</span></span><br><span class="line"><span class="keyword">const</span> domainMappings = &#123;</span><br><span class="line">  <span class="string">&quot;/steam-store&quot;</span>: <span class="string">&quot;https://store.steampowered.com&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/steam-api&quot;</span>: <span class="string">&quot;https://api.steampowered.com&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中,前面的部分是路由,就是 https:&#x2F;&#x2F;你的域名&#x2F;路由 也就如果</p>
<p>访问 <em>https:&#x2F;&#x2F;你的域名&#x2F;steam-store</em> 反代的就是 <em><a href="https://store.steampowered.com/">https://store.steampowered.com</a></em><br>访问 <em>https:&#x2F;&#x2F;你的域名&#x2F;steam-api</em> 反代的就是 <em><a href="https://api.steampowered.com/">https://api.steampowered.com</a></em> </p>
<p>其他同理,你可以添加也可以减少</p>
<h3 id="通用反代"><a href="#通用反代" class="headerlink" title="通用反代"></a>通用反代</h3><p>将以下代码覆盖掉左侧代码框的内容</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(<span class="string">&#x27;fetch&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">  event.<span class="title function_">respondWith</span>(<span class="title function_">handleRequest</span>(event.<span class="property">request</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> specialCases = &#123;</span><br><span class="line">  <span class="string">&quot;*&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;DELETE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;DELETE&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleSpecialCases</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> rules = specialCases[<span class="string">&quot;*&quot;</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(rules)) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (value) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&quot;KEEP&quot;</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&quot;DELETE&quot;</span>:</span><br><span class="line">        request.<span class="property">headers</span>.<span class="title function_">delete</span>(key);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        request.<span class="property">headers</span>.<span class="title function_">set</span>(key, value);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果是访问根目录就返回一个HTML</span></span><br><span class="line">  <span class="keyword">if</span> (url.<span class="property">pathname</span> === <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">`</span></span><br><span class="line"><span class="string">      &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">          &lt;style&gt;</span></span><br><span class="line"><span class="string">            body &#123;</span></span><br><span class="line"><span class="string">              display: flex;</span></span><br><span class="line"><span class="string">              justify-content: center;</span></span><br><span class="line"><span class="string">              align-items: center;</span></span><br><span class="line"><span class="string">              height: 100vh;</span></span><br><span class="line"><span class="string">              margin: 0;</span></span><br><span class="line"><span class="string">              background-color: #f9f9f9;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            h1 &#123;</span></span><br><span class="line"><span class="string">              font-family: Arial, sans-serif;</span></span><br><span class="line"><span class="string">              color: #333;</span></span><br><span class="line"><span class="string">              text-align: center;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">          &lt;h1&gt;Why don&#x27;t you play Genshin Impact?&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">      &lt;/html&gt;</span></span><br><span class="line"><span class="string">    `</span>, &#123;</span><br><span class="line">      <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/html&quot;</span> &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (url.<span class="property">pathname</span>.<span class="title function_">startsWith</span>(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">let</span> targetUrl = url.<span class="property">pathname</span>.<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动补全协议（默认HTTPS）</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="regexp">/^https?:\/\//</span>.<span class="title function_">test</span>(targetUrl)) &#123;</span><br><span class="line">      targetUrl = <span class="string">&quot;https://&quot;</span> + targetUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 动态生成URL</span></span><br><span class="line">    <span class="keyword">const</span> modifiedRequest = <span class="keyword">new</span> <span class="title class_">Request</span>(targetUrl, &#123;</span><br><span class="line">      <span class="attr">headers</span>: request.<span class="property">headers</span>,</span><br><span class="line">      <span class="attr">method</span>: request.<span class="property">method</span>,</span><br><span class="line">      <span class="attr">body</span>: request.<span class="property">body</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&#x27;follow&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleSpecialCases</span>(modifiedRequest);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送请求</span></span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(modifiedRequest);</span><br><span class="line">    <span class="keyword">const</span> modifiedResponse = <span class="keyword">new</span> <span class="title class_">Response</span>(response.<span class="property">body</span>, response);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 允许跨域</span></span><br><span class="line">    modifiedResponse.<span class="property">headers</span>.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> modifiedResponse;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">&quot;Path not found&quot;</span>, &#123; <span class="attr">status</span>: <span class="number">404</span> &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>直接在 <em>https:&#x2F;&#x2F;域名</em> 后面加反代的地址就行,也就是 <em>https:&#x2F;&#x2F;域名&#x2F;需要反代的网站</em> 比如</p>
<p>访问 <em>https:&#x2F;&#x2F;你的域名&#x2F;<a href="https://store.steampowered.com/">https://store.steampowered.com</a></em> 反代的就是 <em><a href="https://store.steampowered.com/">https://store.steampowered.com</a></em><br>访问 <em>https:&#x2F;&#x2F;你的域名&#x2F;<a href="https://api.steampowered.com/">https://api.steampowered.com</a></em> 反代的就是 <em><a href="https://api.steampowered.com/">https://api.steampowered.com</a></em> </p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>点击<strong>部署</strong><br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291255126.png"></p>
<p>在下方出现以下提示就可以啦<br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291256535.png"></p>
<p>访问 https:&#x2F;&#x2F;你的域名 出现下面界面就成功啦<br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291306877.png"></p>
<p>当然，有概率你是会出现<strong>网页无法访问</strong>,这就是CloudFlare的部分域名被墙了……</p>
<p>这就是需要下一步的原因</p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>注册域名过程略</p>
<p>我们首先要将自己的域名 DNS 托管给 Cloudflare，返回在控制台选择“网站”选项卡,输入你注册的域名,点击继续</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs202411291311417.png"></p>
<p>个人用选择FREE套餐即可,点击继续</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs202411291314319.png"></p>
<p>点击<strong>继续前往激活</strong><br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291315703.png"></p>
<p>点击<strong>确认</strong><br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291316747.png"></p>
<p>将Cloudflare 给的名称服务器填在你注册域名的地方,这里不细说<br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291317834.png"></p>
<p>填完后点击<strong>继续</strong>等待名称服务器更新(等待时间在几分钟到几个小时之间,不要急,成功后Cloudflare会发送邮件到你的邮箱)<br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291318257.png"></p>
<p>刷新后域名的状态变为<strong>活动</strong>就可以了<br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291323629.png"></p>
<h2 id="使用域名"><a href="#使用域名" class="headerlink" title="使用域名"></a>使用域名</h2><p>继续前往 <strong>Workers 和 Pages</strong> ,点击进入刚才创建的 <strong>Workers</strong> 服务<br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291325385.png"></p>
<p>进入<strong>设置</strong>,在 <strong>域和路由</strong> 点击 <strong>添加</strong><br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291327489.png"></p>
<p>点击<strong>自定义域</strong><br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291328315.png"><br>输入任意的域名前缀+你的域名.例如<em>proxy.example.com</em> , 将<em>example.com</em>替换为你的域名<br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291328844.png"><br>点击<strong>添加域</strong>即可<br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291330420.png"></p>
<p>然后将 Cloudflare 的域名替换为自己的即可</p>
<h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>即使指定反代依旧有泄露被滥用的风险,那就浅浅加个用户白名单吧(doge)</p>
<p>加了白名单的话通用反代方便一点</p>
<h3 id="IP白名单"><a href="#IP白名单" class="headerlink" title="IP白名单"></a>IP白名单</h3><p>将下面的<strong>IP白名单</strong>换成你自己的服务器IP即可,极大的保证了不被滥用以及稳定不被墙</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//IP白名单</span></span><br><span class="line"><span class="keyword">const</span> allowedIPs = [</span><br><span class="line">   <span class="comment">// IPv4 示例</span></span><br><span class="line">  <span class="string">&#x27;123.123.123.123&#x27;</span>,</span><br><span class="line">   <span class="comment">// IPv6 示例</span></span><br><span class="line">  <span class="string">&#x27;2001:0db8:85a3:0000:0000:8a2e:0370:7334&#x27;</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<h4 id="通用反代-1"><a href="#通用反代-1" class="headerlink" title="通用反代"></a>通用反代</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(<span class="string">&#x27;fetch&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">  event.<span class="title function_">respondWith</span>(<span class="title function_">handleRequest</span>(event.<span class="property">request</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> specialCases = &#123;</span><br><span class="line">  <span class="string">&quot;*&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;DELETE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;DELETE&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//IP白名单</span></span><br><span class="line"><span class="keyword">const</span> allowedIPs = [</span><br><span class="line">   <span class="comment">// IPv4 示例</span></span><br><span class="line">  <span class="string">&#x27;123.123.123.123&#x27;</span>,</span><br><span class="line">   <span class="comment">// IPv6 示例</span></span><br><span class="line">  <span class="string">&#x27;2001:0db8:85a3:0000:0000:8a2e:0370:7334&#x27;</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleSpecialCases</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> rules = specialCases[<span class="string">&quot;*&quot;</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(rules)) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (value) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&quot;KEEP&quot;</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&quot;DELETE&quot;</span>:</span><br><span class="line">        request.<span class="property">headers</span>.<span class="title function_">delete</span>(key);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        request.<span class="property">headers</span>.<span class="title function_">set</span>(key, value);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 获取用户 IP 地址（支持 IPv4 和 IPv6）</span></span><br><span class="line">  <span class="keyword">const</span> userIP = request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;CF-Connecting-IP&#x27;</span>) || request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;X-Forwarded-For&#x27;</span>) || request.<span class="property">connection</span>.<span class="property">remoteAddress</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 检查 IP 是否在白名单内</span></span><br><span class="line">  <span class="keyword">if</span> (!allowedIPs.<span class="title function_">includes</span>(userIP)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">`</span></span><br><span class="line"><span class="string">      &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">          &lt;style&gt;</span></span><br><span class="line"><span class="string">            body &#123;</span></span><br><span class="line"><span class="string">              display: flex;</span></span><br><span class="line"><span class="string">              justify-content: center;</span></span><br><span class="line"><span class="string">              align-items: center;</span></span><br><span class="line"><span class="string">              height: 100vh;</span></span><br><span class="line"><span class="string">              margin: 0;</span></span><br><span class="line"><span class="string">              background-color: #f9f9f9;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            h1 &#123;</span></span><br><span class="line"><span class="string">              font-family: Arial, sans-serif;</span></span><br><span class="line"><span class="string">              color: #333;</span></span><br><span class="line"><span class="string">              text-align: center;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">          &lt;h1&gt;Caused by playing Genshin Impact&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">      &lt;/html&gt;</span></span><br><span class="line"><span class="string">    `</span>, &#123;</span><br><span class="line">      <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/html&quot;</span> &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果是访问根目录就返回一个HTML</span></span><br><span class="line">  <span class="keyword">if</span> (url.<span class="property">pathname</span> === <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">`</span></span><br><span class="line"><span class="string">      &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">          &lt;style&gt;</span></span><br><span class="line"><span class="string">            body &#123;</span></span><br><span class="line"><span class="string">              display: flex;</span></span><br><span class="line"><span class="string">              justify-content: center;</span></span><br><span class="line"><span class="string">              align-items: center;</span></span><br><span class="line"><span class="string">              height: 100vh;</span></span><br><span class="line"><span class="string">              margin: 0;</span></span><br><span class="line"><span class="string">              background-color: #f9f9f9;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            h1 &#123;</span></span><br><span class="line"><span class="string">              font-family: Arial, sans-serif;</span></span><br><span class="line"><span class="string">              color: #333;</span></span><br><span class="line"><span class="string">              text-align: center;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">          &lt;h1&gt;Why don&#x27;t you play Genshin Impact?&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">      &lt;/html&gt;</span></span><br><span class="line"><span class="string">    `</span>, &#123;</span><br><span class="line">      <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/html&quot;</span> &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (url.<span class="property">pathname</span>.<span class="title function_">startsWith</span>(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">let</span> targetUrl = url.<span class="property">pathname</span>.<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动补全协议</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="regexp">/^https?:\/\//</span>.<span class="title function_">test</span>(targetUrl)) &#123;</span><br><span class="line">      targetUrl = <span class="string">&quot;https://&quot;</span> + targetUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 动态生成URL</span></span><br><span class="line">    <span class="keyword">const</span> modifiedRequest = <span class="keyword">new</span> <span class="title class_">Request</span>(targetUrl, &#123;</span><br><span class="line">      <span class="attr">headers</span>: request.<span class="property">headers</span>,</span><br><span class="line">      <span class="attr">method</span>: request.<span class="property">method</span>,</span><br><span class="line">      <span class="attr">body</span>: request.<span class="property">body</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&#x27;follow&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleSpecialCases</span>(modifiedRequest);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送请求</span></span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(modifiedRequest);</span><br><span class="line">    <span class="keyword">const</span> modifiedResponse = <span class="keyword">new</span> <span class="title class_">Response</span>(response.<span class="property">body</span>, response);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 允许跨域</span></span><br><span class="line">    modifiedResponse.<span class="property">headers</span>.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> modifiedResponse;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">&quot;Path not found&quot;</span>, &#123; <span class="attr">status</span>: <span class="number">404</span> &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="指定反代-1"><a href="#指定反代-1" class="headerlink" title="指定反代"></a>指定反代</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(<span class="string">&#x27;fetch&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">  event.<span class="title function_">respondWith</span>(<span class="title function_">handleRequest</span>(event.<span class="property">request</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 域名映射表</span></span><br><span class="line"><span class="keyword">const</span> domainMappings = &#123;</span><br><span class="line">  <span class="string">&quot;/steam-store&quot;</span>: <span class="string">&quot;https://store.steampowered.com&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/steam-api&quot;</span>: <span class="string">&quot;https://api.steampowered.com&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> specialCases = &#123;</span><br><span class="line">  <span class="string">&quot;*&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;DELETE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;DELETE&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//IP白名单</span></span><br><span class="line"><span class="keyword">const</span> allowedIPs = [</span><br><span class="line">   <span class="comment">// IPv4 示例</span></span><br><span class="line">  <span class="string">&#x27;123.123.123.123&#x27;</span>,</span><br><span class="line">   <span class="comment">// IPv6 示例</span></span><br><span class="line">  <span class="string">&#x27;2001:0db8:85a3:0000:0000:8a2e:0370:7334&#x27;</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleSpecialCases</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> rules = specialCases[<span class="string">&quot;*&quot;</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(rules)) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (value) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&quot;KEEP&quot;</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&quot;DELETE&quot;</span>:</span><br><span class="line">        request.<span class="property">headers</span>.<span class="title function_">delete</span>(key);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        request.<span class="property">headers</span>.<span class="title function_">set</span>(key, value);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取用户 IP 地址</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getUserIP</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;CF-Connecting-IP&#x27;</span>) || request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;X-Forwarded-For&#x27;</span>) || request.<span class="property">connection</span>.<span class="property">remoteAddress</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> userIP = <span class="title function_">getUserIP</span>(request);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 检查 IP 是否在白名单内</span></span><br><span class="line">  <span class="keyword">if</span> (!allowedIPs.<span class="title function_">includes</span>(userIP)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">`</span></span><br><span class="line"><span class="string">      &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">          &lt;style&gt;</span></span><br><span class="line"><span class="string">            body &#123;</span></span><br><span class="line"><span class="string">              display: flex;</span></span><br><span class="line"><span class="string">              justify-content: center;</span></span><br><span class="line"><span class="string">              align-items: center;</span></span><br><span class="line"><span class="string">              height: 100vh;</span></span><br><span class="line"><span class="string">              margin: 0;</span></span><br><span class="line"><span class="string">              background-color: #f9f9f9;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            h1 &#123;</span></span><br><span class="line"><span class="string">              font-family: Arial, sans-serif;</span></span><br><span class="line"><span class="string">              color: #333;</span></span><br><span class="line"><span class="string">              text-align: center;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">          &lt;h1&gt;Caused by playing Genshin Impact&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">      &lt;/html&gt;</span></span><br><span class="line"><span class="string">    `</span>, &#123;</span><br><span class="line">      <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/html&quot;</span> &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果是访问根目录就返回一个HTML</span></span><br><span class="line">  <span class="keyword">if</span> (url.<span class="property">pathname</span> === <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">`</span></span><br><span class="line"><span class="string">      &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">          &lt;style&gt;</span></span><br><span class="line"><span class="string">            body &#123;</span></span><br><span class="line"><span class="string">              display: flex;</span></span><br><span class="line"><span class="string">              justify-content: center;</span></span><br><span class="line"><span class="string">              align-items: center;</span></span><br><span class="line"><span class="string">              height: 100vh;</span></span><br><span class="line"><span class="string">              margin: 0;</span></span><br><span class="line"><span class="string">              background-color: #f9f9f9;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            h1 &#123;</span></span><br><span class="line"><span class="string">              font-family: Arial, sans-serif;</span></span><br><span class="line"><span class="string">              color: #333;</span></span><br><span class="line"><span class="string">              text-align: center;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">          &lt;h1&gt;Why don&#x27;t you play Genshin Impact?&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">      &lt;/html&gt;</span></span><br><span class="line"><span class="string">    `</span>, &#123;</span><br><span class="line">      <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/html&quot;</span> &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> basePath = <span class="title class_">Object</span>.<span class="title function_">keys</span>(domainMappings).<span class="title function_">find</span>(<span class="function"><span class="params">path</span> =&gt;</span> url.<span class="property">pathname</span>.<span class="title function_">startsWith</span>(path));</span><br><span class="line">  <span class="keyword">if</span> (!basePath) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">&quot;Path not found in domain mappings&quot;</span>, &#123; <span class="attr">status</span>: <span class="number">404</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> targetBase = domainMappings[basePath];</span><br><span class="line">  <span class="keyword">const</span> targetPath = url.<span class="property">pathname</span>.<span class="title function_">slice</span>(basePath.<span class="property">length</span>) + url.<span class="property">search</span> + url.<span class="property">hash</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> targetUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(targetPath, targetBase);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> modifiedRequest = <span class="keyword">new</span> <span class="title class_">Request</span>(targetUrl, &#123;</span><br><span class="line">    <span class="attr">headers</span>: request.<span class="property">headers</span>,</span><br><span class="line">    <span class="attr">method</span>: request.<span class="property">method</span>,</span><br><span class="line">    <span class="attr">body</span>: request.<span class="property">body</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;follow&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">handleSpecialCases</span>(modifiedRequest);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 发送请求</span></span><br><span class="line">  <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(modifiedRequest);</span><br><span class="line">  <span class="keyword">const</span> modifiedResponse = <span class="keyword">new</span> <span class="title class_">Response</span>(response.<span class="property">body</span>, response);</span><br><span class="line"></span><br><span class="line">  modifiedResponse.<span class="property">headers</span>.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> modifiedResponse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id=""><a href="#" class="headerlink" title=""></a></h4>]]></content>
      <tags>
        <tag>CloudFlare</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker反代搭建</title>
    <url>/2025/01/14/DockerReverseProxy/</url>
    <content><![CDATA[<div class="note warning simple"><p>[2024年12月03日] CloudFlare更新 <a href="https://www.cloudflare.com/zh-cn/terms/">服务条款 2.2.1</a><br><strong>禁止包括但不限于导致（直接或间接）您的 Cloudflare 代理域的流量发送到非 Cloudflare 为该域分配的 IP 地址</strong><br><strong>禁止使用服务提供虚拟专用网络或其他类似的代理服务</strong></p>
<p>若任使用请知晓可能出现的风险, 包括但不限于: <strong>暂停或终止您对cloudflare服务的使用或访问</strong> 等等。</p>
</div>

<div class="note info simple"><p>FREE套餐CloudFlare每日提供 <strong>10w</strong> 请求的免费额度,个人用完全足够,但并不能保证很多人同时使用,强烈建议仅自用</p>
</div>

<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li>一个<strong>CloudFlare</strong>账号,如果没有就去<a href="https://dash.cloudflare.com/sign-up">CloudFlare</a>注册   <del>这不废话</del></li>
<li>一个可以添加到CloudFlare的域名(可选),主要是CloudFlare的一些域名被墙,导致无法直接访问</li>
</ul>
<h2 id="创建并配置Workers"><a href="#创建并配置Workers" class="headerlink" title="创建并配置Workers"></a>创建并配置Workers</h2><h3 id="创建-Workers"><a href="#创建-Workers" class="headerlink" title="创建 Workers"></a>创建 Workers</h3><p>在 Cloudflare 的面板左侧点击 <strong>Workers 和 Pages</strong> 进入后点击<strong>创建</strong>按钮</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs202411291237524.png"></p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs202411291240960.png"></p>
<p>点击<strong>创建Workers</strong>按钮</p>
<p><img src="https://image.blog.mapleleaf.icu/image/imgs202411291242134.png"></p>
<p>名字随便填,我这里就直接填proxy了,然后点击<strong>部署</strong><br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291243794.png"></p>
<p>点击<strong>编辑代码</strong>进入代码编辑页面<br><img src="https://image.blog.mapleleaf.icu/image/imgs202411291245172.png"></p>
<h3 id="填入代码"><a href="#填入代码" class="headerlink" title="填入代码"></a>填入代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// _worker.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Docker镜像仓库主机地址</span></span><br><span class="line"><span class="keyword">let</span> hub_host = <span class="string">&#x27;registry-1.docker.io&#x27;</span>;</span><br><span class="line"><span class="comment">// Docker认证服务器地址</span></span><br><span class="line"><span class="keyword">const</span> auth_url = <span class="string">&#x27;https://auth.docker.io&#x27;</span>;</span><br><span class="line"><span class="comment">// 自定义的工作服务器地址</span></span><br><span class="line"><span class="keyword">let</span> workers_url = <span class="string">&#x27;https://xxx/&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> 屏蔽爬虫<span class="variable constant_">UA</span> = [<span class="string">&#x27;netcraft&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据主机名选择对应的上游地址</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">routeByHosts</span>(<span class="params">host</span>) &#123;</span><br><span class="line">	<span class="comment">// 定义路由表</span></span><br><span class="line">	<span class="keyword">const</span> routes = &#123;</span><br><span class="line">		<span class="comment">// 生产环境</span></span><br><span class="line">		<span class="string">&quot;quay&quot;</span>: <span class="string">&quot;quay.io&quot;</span>,</span><br><span class="line">		<span class="string">&quot;gcr&quot;</span>: <span class="string">&quot;gcr.io&quot;</span>,</span><br><span class="line">		<span class="string">&quot;k8s-gcr&quot;</span>: <span class="string">&quot;k8s.gcr.io&quot;</span>,</span><br><span class="line">		<span class="string">&quot;k8s&quot;</span>: <span class="string">&quot;registry.k8s.io&quot;</span>,</span><br><span class="line">		<span class="string">&quot;ghcr&quot;</span>: <span class="string">&quot;ghcr.io&quot;</span>,</span><br><span class="line">		<span class="string">&quot;cloudsmith&quot;</span>: <span class="string">&quot;docker.cloudsmith.io&quot;</span>,</span><br><span class="line">		<span class="string">&quot;nvcr&quot;</span>: <span class="string">&quot;nvcr.io&quot;</span>,</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 测试环境</span></span><br><span class="line">		<span class="string">&quot;test&quot;</span>: <span class="string">&quot;registry-1.docker.io&quot;</span>,</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (host <span class="keyword">in</span> routes) <span class="keyword">return</span> [ routes[host], <span class="literal">false</span> ];</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> [ hub_host, <span class="literal">true</span> ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">RequestInit</span>&#125; */</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PREFLIGHT_INIT</span> = &#123;</span><br><span class="line">	<span class="comment">// 预检请求配置</span></span><br><span class="line">	<span class="attr">headers</span>: <span class="keyword">new</span> <span class="title class_">Headers</span>(&#123;</span><br><span class="line">		<span class="string">&#x27;access-control-allow-origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span>, <span class="comment">// 允许所有来源</span></span><br><span class="line">		<span class="string">&#x27;access-control-allow-methods&#x27;</span>: <span class="string">&#x27;GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS&#x27;</span>, <span class="comment">// 允许的HTTP方法</span></span><br><span class="line">		<span class="string">&#x27;access-control-max-age&#x27;</span>: <span class="string">&#x27;1728000&#x27;</span>, <span class="comment">// 预检请求的缓存时间</span></span><br><span class="line">	&#125;),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构造响应</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">any</span>&#125; body 响应体</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; status 响应状态码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Object&lt;string, string&gt;</span>&#125; headers 响应头</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">makeRes</span>(<span class="params">body, status = <span class="number">200</span>, headers = &#123;&#125;</span>) &#123;</span><br><span class="line">	headers[<span class="string">&#x27;access-control-allow-origin&#x27;</span>] = <span class="string">&#x27;*&#x27;</span> <span class="comment">// 允许所有来源</span></span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(body, &#123; status, headers &#125;) <span class="comment">// 返回新构造的响应</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构造新的URL对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; urlStr URL字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">newUrl</span>(<span class="params">urlStr</span>) &#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">URL</span>(urlStr) <span class="comment">// 尝试构造新的URL对象</span></span><br><span class="line">	&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">null</span> <span class="comment">// 构造失败返回null</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isUUID</span>(<span class="params">uuid</span>) &#123;</span><br><span class="line">	<span class="comment">// 定义一个正则表达式来匹配 UUID 格式</span></span><br><span class="line">	<span class="keyword">const</span> uuidRegex = <span class="regexp">/^[0-9a-f]&#123;8&#125;-[0-9a-f]&#123;4&#125;-[4][0-9a-f]&#123;3&#125;-[89ab][0-9a-f]&#123;3&#125;-[0-9a-f]&#123;12&#125;$/i</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 使用正则表达式测试 UUID 字符串</span></span><br><span class="line">	<span class="keyword">return</span> uuidRegex.<span class="title function_">test</span>(uuid);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">nginx</span>(<span class="params"></span>) &#123;</span><br><span class="line">	<span class="keyword">const</span> text = <span class="string">`</span></span><br><span class="line"><span class="string">	&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">	&lt;html&gt;</span></span><br><span class="line"><span class="string">	&lt;head&gt;</span></span><br><span class="line"><span class="string">	&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span></span><br><span class="line"><span class="string">	&lt;style&gt;</span></span><br><span class="line"><span class="string">		body &#123;</span></span><br><span class="line"><span class="string">			width: 35em;</span></span><br><span class="line"><span class="string">			margin: 0 auto;</span></span><br><span class="line"><span class="string">			font-family: Tahoma, Verdana, Arial, sans-serif;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">	&lt;/style&gt;</span></span><br><span class="line"><span class="string">	&lt;/head&gt;</span></span><br><span class="line"><span class="string">	&lt;body&gt;</span></span><br><span class="line"><span class="string">	&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span></span><br><span class="line"><span class="string">	&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span></span><br><span class="line"><span class="string">	working. Further configuration is required.&lt;/p&gt;</span></span><br><span class="line"><span class="string">	</span></span><br><span class="line"><span class="string">	&lt;p&gt;For online documentation and support please refer to</span></span><br><span class="line"><span class="string">	&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span></span><br><span class="line"><span class="string">	Commercial support is available at</span></span><br><span class="line"><span class="string">	&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span></span><br><span class="line"><span class="string">	</span></span><br><span class="line"><span class="string">	&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">	&lt;/body&gt;</span></span><br><span class="line"><span class="string">	&lt;/html&gt;</span></span><br><span class="line"><span class="string">	`</span></span><br><span class="line">	<span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">searchInterface</span>(<span class="params"></span>) &#123;</span><br><span class="line">	<span class="keyword">const</span> text = <span class="string">`</span></span><br><span class="line"><span class="string">	&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">	&lt;html&gt;</span></span><br><span class="line"><span class="string">	&lt;head&gt;</span></span><br><span class="line"><span class="string">		&lt;title&gt;Docker Hub Search&lt;/title&gt;</span></span><br><span class="line"><span class="string">		&lt;style&gt;</span></span><br><span class="line"><span class="string">		body &#123;</span></span><br><span class="line"><span class="string">			font-family: Arial, sans-serif;</span></span><br><span class="line"><span class="string">			display: flex;</span></span><br><span class="line"><span class="string">			flex-direction: column;</span></span><br><span class="line"><span class="string">			align-items: center;</span></span><br><span class="line"><span class="string">			justify-content: center;</span></span><br><span class="line"><span class="string">			height: 100vh;</span></span><br><span class="line"><span class="string">			margin: 0;</span></span><br><span class="line"><span class="string">			background: linear-gradient(to right, rgb(28, 143, 237), rgb(29, 99, 237));</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		.logo &#123;</span></span><br><span class="line"><span class="string">			margin-bottom: 20px;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		.search-container &#123;</span></span><br><span class="line"><span class="string">			display: flex;</span></span><br><span class="line"><span class="string">			align-items: center;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		#search-input &#123;</span></span><br><span class="line"><span class="string">			padding: 10px;</span></span><br><span class="line"><span class="string">			font-size: 16px;</span></span><br><span class="line"><span class="string">			border: 1px solid #ddd;</span></span><br><span class="line"><span class="string">			border-radius: 4px;</span></span><br><span class="line"><span class="string">			width: 300px;</span></span><br><span class="line"><span class="string">			margin-right: 10px;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		#search-button &#123;</span></span><br><span class="line"><span class="string">			padding: 10px;</span></span><br><span class="line"><span class="string">			background-color: rgba(255, 255, 255, 0.2); /* 设置白色，透明度为10% */</span></span><br><span class="line"><span class="string">			border: none;</span></span><br><span class="line"><span class="string">			border-radius: 4px;</span></span><br><span class="line"><span class="string">			cursor: pointer;</span></span><br><span class="line"><span class="string">			width: 44px;</span></span><br><span class="line"><span class="string">			height: 44px;</span></span><br><span class="line"><span class="string">			display: flex;</span></span><br><span class="line"><span class="string">			align-items: center;</span></span><br><span class="line"><span class="string">			justify-content: center;</span></span><br><span class="line"><span class="string">		&#125;			</span></span><br><span class="line"><span class="string">		#search-button svg &#123;</span></span><br><span class="line"><span class="string">			width: 24px;</span></span><br><span class="line"><span class="string">			height: 24px;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		&lt;/style&gt;</span></span><br><span class="line"><span class="string">	&lt;/head&gt;</span></span><br><span class="line"><span class="string">	&lt;body&gt;</span></span><br><span class="line"><span class="string">		&lt;div class=&quot;logo&quot;&gt;</span></span><br><span class="line"><span class="string">		&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 18&quot; fill=&quot;#ffffff&quot; width=&quot;100&quot; height=&quot;75&quot;&gt;</span></span><br><span class="line"><span class="string">			&lt;path d=&quot;M23.763 6.886c-.065-.053-.673-.512-1.954-.512-.32 0-.659.03-1.01.087-.248-1.703-1.651-2.533-1.716-2.57l-.345-.2-.227.328a4.596 4.596 0 0 0-.611 1.433c-.23.972-.09 1.884.403 2.666-.596.331-1.546.418-1.744.42H.752a.753.753 0 0 0-.75.749c-.007 1.456.233 2.864.692 4.07.545 1.43 1.355 2.483 2.409 3.13 1.181.725 3.104 1.14 5.276 1.14 1.016 0 2.03-.092 2.93-.266 1.417-.273 2.705-.742 3.826-1.391a10.497 10.497 0 0 0 2.61-2.14c1.252-1.42 1.998-3.005 2.553-4.408.075.003.148.005.221.005 1.371 0 2.215-.55 2.68-1.01.505-.5.685-.998.704-1.053L24 7.076l-.237-.19Z&quot;&gt;&lt;/path&gt;</span></span><br><span class="line"><span class="string">			&lt;path d=&quot;M2.216 8.075h2.119a.186.186 0 0 0 .185-.186V6a.186.186 0 0 0-.185-.186H2.216A.186.186 0 0 0 2.031 6v1.89c0 .103.083.186.185.186Zm2.92 0h2.118a.185.185 0 0 0 .185-.186V6a.185.185 0 0 0-.185-.186H5.136A.185.185 0 0 0 4.95 6v1.89c0 .103.083.186.186.186Zm2.964 0h2.118a.186.186 0 0 0 .185-.186V6a.186.186 0 0 0-.185-.186H8.1A.185.185 0 0 0 7.914 6v1.89c0 .103.083.186.186.186Zm2.928 0h2.119a.185.185 0 0 0 .185-.186V6a.185.185 0 0 0-.185-.186h-2.119a.186.186 0 0 0-.185.186v1.89c0 .103.083.186.185.186Zm-5.892-2.72h2.118a.185.185 0 0 0 .185-.186V3.28a.186.186 0 0 0-.185-.186H5.136a.186.186 0 0 0-.186.186v1.89c0 .103.083.186.186.186Zm2.964 0h2.118a.186.186 0 0 0 .185-.186V3.28a.186.186 0 0 0-.185-.186H8.1a.186.186 0 0 0-.186.186v1.89c0 .103.083.186.186.186Zm2.928 0h2.119a.185.185 0 0 0 .185-.186V3.28a.186.186 0 0 0-.185-.186h-2.119a.186.186 0 0 0-.185.186v1.89c0 .103.083.186.185.186Zm0-2.72h2.119a.186.186 0 0 0 .185-.186V.56a.185.185 0 0 0-.185-.186h-2.119a.186.186 0 0 0-.185.186v1.89c0 .103.083.186.185.186Zm2.955 5.44h2.118a.185.185 0 0 0 .186-.186V6a.185.185 0 0 0-.186-.186h-2.118a.185.185 0 0 0-.185.186v1.89c0 .103.083.186.185.186Z&quot;&gt;&lt;/path&gt;</span></span><br><span class="line"><span class="string">		&lt;/svg&gt;</span></span><br><span class="line"><span class="string">		&lt;/div&gt;</span></span><br><span class="line"><span class="string">		&lt;div class=&quot;search-container&quot;&gt;</span></span><br><span class="line"><span class="string">		&lt;input type=&quot;text&quot; id=&quot;search-input&quot; placeholder=&quot;Search Docker Hub&quot;&gt;</span></span><br><span class="line"><span class="string">		&lt;button id=&quot;search-button&quot;&gt;</span></span><br><span class="line"><span class="string">			&lt;svg focusable=&quot;false&quot; aria-hidden=&quot;true&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;</span></span><br><span class="line"><span class="string">			&lt;path d=&quot;M21 21L16.65 16.65M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z&quot; stroke=&quot;white&quot; fill=&quot;none&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;/path&gt;</span></span><br><span class="line"><span class="string">			&lt;/svg&gt;</span></span><br><span class="line"><span class="string">		&lt;/button&gt;</span></span><br><span class="line"><span class="string">		&lt;/div&gt;</span></span><br><span class="line"><span class="string">		&lt;script&gt;</span></span><br><span class="line"><span class="string">		function performSearch() &#123;</span></span><br><span class="line"><span class="string">			const query = document.getElementById(&#x27;search-input&#x27;).value;</span></span><br><span class="line"><span class="string">			if (query) &#123;</span></span><br><span class="line"><span class="string">			window.location.href = &#x27;/search?q=&#x27; + encodeURIComponent(query);</span></span><br><span class="line"><span class="string">			&#125;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">	</span></span><br><span class="line"><span class="string">		document.getElementById(&#x27;search-button&#x27;).addEventListener(&#x27;click&#x27;, performSearch);</span></span><br><span class="line"><span class="string">		document.getElementById(&#x27;search-input&#x27;).addEventListener(&#x27;keypress&#x27;, function(event) &#123;</span></span><br><span class="line"><span class="string">			if (event.key === &#x27;Enter&#x27;) &#123;</span></span><br><span class="line"><span class="string">			performSearch();</span></span><br><span class="line"><span class="string">			&#125;</span></span><br><span class="line"><span class="string">		&#125;);</span></span><br><span class="line"><span class="string">		&lt;/script&gt;</span></span><br><span class="line"><span class="string">	&lt;/body&gt;</span></span><br><span class="line"><span class="string">	&lt;/html&gt;</span></span><br><span class="line"><span class="string">	`</span>;</span><br><span class="line">	<span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">	<span class="keyword">async</span> <span class="title function_">fetch</span>(<span class="params">request, env, ctx</span>) &#123;</span><br><span class="line">		<span class="keyword">const</span> <span class="title function_">getReqHeader</span> = (<span class="params">key</span>) =&gt; request.<span class="property">headers</span>.<span class="title function_">get</span>(key); <span class="comment">// 获取请求头</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">let</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>); <span class="comment">// 解析请求URL</span></span><br><span class="line">		<span class="keyword">const</span> userAgentHeader = request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;User-Agent&#x27;</span>);</span><br><span class="line">		<span class="keyword">const</span> userAgent = userAgentHeader ? userAgentHeader.<span class="title function_">toLowerCase</span>() : <span class="string">&quot;null&quot;</span>;</span><br><span class="line">		<span class="keyword">if</span> (env.<span class="property">UA</span>) 屏蔽爬虫<span class="variable constant_">UA</span> = 屏蔽爬虫<span class="variable constant_">UA</span>.<span class="title function_">concat</span>(<span class="keyword">await</span> <span class="title function_">ADD</span>(env.<span class="property">UA</span>));</span><br><span class="line">		workers_url = <span class="string">`https://<span class="subst">$&#123;url.hostname&#125;</span>`</span>;</span><br><span class="line">		<span class="keyword">const</span> pathname = url.<span class="property">pathname</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 获取请求参数中的 ns</span></span><br><span class="line">		<span class="keyword">const</span> ns = url.<span class="property">searchParams</span>.<span class="title function_">get</span>(<span class="string">&#x27;ns&#x27;</span>); </span><br><span class="line">		<span class="keyword">const</span> hostname = url.<span class="property">searchParams</span>.<span class="title function_">get</span>(<span class="string">&#x27;hubhost&#x27;</span>) || url.<span class="property">hostname</span>;</span><br><span class="line">		<span class="keyword">const</span> hostTop = hostname.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]; <span class="comment">// 获取主机名的第一部分</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">let</span> checkHost; <span class="comment">// 在这里定义 checkHost 变量</span></span><br><span class="line">		<span class="comment">// 如果存在 ns 参数，优先使用它来确定 hub_host</span></span><br><span class="line">		<span class="keyword">if</span> (ns) &#123;</span><br><span class="line">			<span class="keyword">if</span> (ns === <span class="string">&#x27;docker.io&#x27;</span>) &#123;</span><br><span class="line">				hub_host = <span class="string">&#x27;registry-1.docker.io&#x27;</span>; <span class="comment">// 设置上游地址为 registry-1.docker.io</span></span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				hub_host = ns; <span class="comment">// 直接使用 ns 作为 hub_host</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			checkHost = <span class="title function_">routeByHosts</span>(hostTop);</span><br><span class="line">			hub_host = checkHost[<span class="number">0</span>]; <span class="comment">// 获取上游地址</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">const</span> fakePage = checkHost ? checkHost[<span class="number">1</span>] : <span class="literal">false</span>; <span class="comment">// 确保 fakePage 不为 undefined</span></span><br><span class="line">		<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`域名头部: <span class="subst">$&#123;hostTop&#125;</span>\n反代地址: <span class="subst">$&#123;hub_host&#125;</span>\n伪装首页: <span class="subst">$&#123;fakePage&#125;</span>`</span>);</span><br><span class="line">		<span class="keyword">const</span> isUuid = <span class="title function_">isUUID</span>(pathname.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>)[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>)[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (屏蔽爬虫<span class="variable constant_">UA</span>.<span class="title function_">some</span>(<span class="function"><span class="params">fxxk</span> =&gt;</span> userAgent.<span class="title function_">includes</span>(fxxk)) &amp;&amp; 屏蔽爬虫<span class="variable constant_">UA</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="comment">// 首页改成一个nginx伪装页</span></span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="keyword">await</span> <span class="title function_">nginx</span>(), &#123;</span><br><span class="line">				<span class="attr">headers</span>: &#123;</span><br><span class="line">					<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html; charset=UTF-8&#x27;</span>,</span><br><span class="line">				&#125;,</span><br><span class="line">			&#125;);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">const</span> conditions = [</span><br><span class="line">			isUuid,</span><br><span class="line">			pathname.<span class="title function_">includes</span>(<span class="string">&#x27;/_&#x27;</span>),</span><br><span class="line">			pathname.<span class="title function_">includes</span>(<span class="string">&#x27;/r/&#x27;</span>),</span><br><span class="line">			pathname.<span class="title function_">includes</span>(<span class="string">&#x27;/v2/repositories&#x27;</span>),</span><br><span class="line">			pathname.<span class="title function_">includes</span>(<span class="string">&#x27;/v2/user&#x27;</span>),</span><br><span class="line">			pathname.<span class="title function_">includes</span>(<span class="string">&#x27;/v2/orgs&#x27;</span>),</span><br><span class="line">			pathname.<span class="title function_">includes</span>(<span class="string">&#x27;/v2/_catalog&#x27;</span>),</span><br><span class="line">			pathname.<span class="title function_">includes</span>(<span class="string">&#x27;/v2/categories&#x27;</span>),</span><br><span class="line">			pathname.<span class="title function_">includes</span>(<span class="string">&#x27;/v2/feature-flags&#x27;</span>),</span><br><span class="line">			pathname.<span class="title function_">includes</span>(<span class="string">&#x27;search&#x27;</span>),</span><br><span class="line">			pathname.<span class="title function_">includes</span>(<span class="string">&#x27;source&#x27;</span>),</span><br><span class="line">			pathname == <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">			pathname == <span class="string">&#x27;/favicon.ico&#x27;</span>,</span><br><span class="line">			pathname == <span class="string">&#x27;/auth/profile&#x27;</span>,</span><br><span class="line">		];</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (conditions.<span class="title function_">some</span>(<span class="function"><span class="params">condition</span> =&gt;</span> condition) &amp;&amp; (fakePage === <span class="literal">true</span> || hostTop == <span class="string">&#x27;docker&#x27;</span>)) &#123;</span><br><span class="line">			<span class="keyword">if</span> (env.<span class="property">URL302</span>) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="title class_">Response</span>.<span class="title function_">redirect</span>(env.<span class="property">URL302</span>, <span class="number">302</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (env.<span class="property">URL</span>) &#123;</span><br><span class="line">				<span class="keyword">if</span> (env.<span class="property">URL</span>.<span class="title function_">toLowerCase</span>() == <span class="string">&#x27;nginx&#x27;</span>) &#123;</span><br><span class="line">					<span class="comment">//首页改成一个nginx伪装页</span></span><br><span class="line">					<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="keyword">await</span> <span class="title function_">nginx</span>(), &#123;</span><br><span class="line">						<span class="attr">headers</span>: &#123;</span><br><span class="line">							<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html; charset=UTF-8&#x27;</span>,</span><br><span class="line">						&#125;,</span><br><span class="line">					&#125;);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">return</span> <span class="title function_">fetch</span>(<span class="keyword">new</span> <span class="title class_">Request</span>(env.<span class="property">URL</span>, request));</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (url.<span class="property">pathname</span> == <span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="keyword">await</span> <span class="title function_">searchInterface</span>(), &#123;</span><br><span class="line">					<span class="attr">headers</span>: &#123;</span><br><span class="line">					  <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html; charset=UTF-8&#x27;</span>,</span><br><span class="line">					&#125;,</span><br><span class="line">				&#125;);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="keyword">const</span> newUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&quot;https://registry.hub.docker.com&quot;</span> + pathname + url.<span class="property">search</span>);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 复制原始请求的标头</span></span><br><span class="line">			<span class="keyword">const</span> headers = <span class="keyword">new</span> <span class="title class_">Headers</span>(request.<span class="property">headers</span>);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 确保 Host 头部被替换为 hub.docker.com</span></span><br><span class="line">			headers.<span class="title function_">set</span>(<span class="string">&#x27;Host&#x27;</span>, <span class="string">&#x27;registry.hub.docker.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">const</span> newRequest = <span class="keyword">new</span> <span class="title class_">Request</span>(newUrl, &#123;</span><br><span class="line">					<span class="attr">method</span>: request.<span class="property">method</span>,</span><br><span class="line">					<span class="attr">headers</span>: headers,</span><br><span class="line">					<span class="attr">body</span>: request.<span class="property">method</span> !== <span class="string">&#x27;GET&#x27;</span> &amp;&amp; request.<span class="property">method</span> !== <span class="string">&#x27;HEAD&#x27;</span> ? <span class="keyword">await</span> request.<span class="title function_">blob</span>() : <span class="literal">null</span>,</span><br><span class="line">					<span class="attr">redirect</span>: <span class="string">&#x27;follow&#x27;</span></span><br><span class="line">			&#125;);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">return</span> <span class="title function_">fetch</span>(newRequest);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 修改包含 %2F 和 %3A 的请求</span></span><br><span class="line">		<span class="keyword">if</span> (!<span class="regexp">/%2F/</span>.<span class="title function_">test</span>(url.<span class="property">search</span>) &amp;&amp; <span class="regexp">/%3A/</span>.<span class="title function_">test</span>(url.<span class="title function_">toString</span>())) &#123;</span><br><span class="line">			<span class="keyword">let</span> modifiedUrl = url.<span class="title function_">toString</span>().<span class="title function_">replace</span>(<span class="regexp">/%3A(?=.*?&amp;)/</span>, <span class="string">&#x27;%3Alibrary%2F&#x27;</span>);</span><br><span class="line">			url = <span class="keyword">new</span> <span class="title function_">URL</span>(modifiedUrl);</span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`handle_url: <span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 处理token请求</span></span><br><span class="line">		<span class="keyword">if</span> (url.<span class="property">pathname</span>.<span class="title function_">includes</span>(<span class="string">&#x27;/token&#x27;</span>)) &#123;</span><br><span class="line">			<span class="keyword">let</span> token_parameter = &#123;</span><br><span class="line">				<span class="attr">headers</span>: &#123;</span><br><span class="line">					<span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;auth.docker.io&#x27;</span>,</span><br><span class="line">					<span class="string">&#x27;User-Agent&#x27;</span>: <span class="title function_">getReqHeader</span>(<span class="string">&quot;User-Agent&quot;</span>),</span><br><span class="line">					<span class="string">&#x27;Accept&#x27;</span>: <span class="title function_">getReqHeader</span>(<span class="string">&quot;Accept&quot;</span>),</span><br><span class="line">					<span class="string">&#x27;Accept-Language&#x27;</span>: <span class="title function_">getReqHeader</span>(<span class="string">&quot;Accept-Language&quot;</span>),</span><br><span class="line">					<span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="title function_">getReqHeader</span>(<span class="string">&quot;Accept-Encoding&quot;</span>),</span><br><span class="line">					<span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">					<span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;max-age=0&#x27;</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			<span class="keyword">let</span> token_url = auth_url + url.<span class="property">pathname</span> + url.<span class="property">search</span>;</span><br><span class="line">			<span class="keyword">return</span> <span class="title function_">fetch</span>(<span class="keyword">new</span> <span class="title class_">Request</span>(token_url, request), token_parameter);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 修改 /v2/ 请求路径</span></span><br><span class="line">		<span class="keyword">if</span> ( hub_host == <span class="string">&#x27;registry-1.docker.io&#x27;</span> &amp;&amp; <span class="regexp">/^\/v2\/[^/]+\/[^/]+\/[^/]+$/</span>.<span class="title function_">test</span>(url.<span class="property">pathname</span>) &amp;&amp; !<span class="regexp">/^\/v2\/library/</span>.<span class="title function_">test</span>(url.<span class="property">pathname</span>)) &#123;</span><br><span class="line">			<span class="comment">//url.pathname = url.pathname.replace(/\/v2\//, &#x27;/v2/library/&#x27;);</span></span><br><span class="line">			url.<span class="property">pathname</span> = <span class="string">&#x27;/v2/library/&#x27;</span> + url.<span class="property">pathname</span>.<span class="title function_">split</span>(<span class="string">&#x27;/v2/&#x27;</span>)[<span class="number">1</span>];</span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`modified_url: <span class="subst">$&#123;url.pathname&#125;</span>`</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 更改请求的主机名</span></span><br><span class="line">		url.<span class="property">hostname</span> = hub_host;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 构造请求参数</span></span><br><span class="line">		<span class="keyword">let</span> parameter = &#123;</span><br><span class="line">			<span class="attr">headers</span>: &#123;</span><br><span class="line">				<span class="string">&#x27;Host&#x27;</span>: hub_host,</span><br><span class="line">				<span class="string">&#x27;User-Agent&#x27;</span>: <span class="title function_">getReqHeader</span>(<span class="string">&quot;User-Agent&quot;</span>),</span><br><span class="line">				<span class="string">&#x27;Accept&#x27;</span>: <span class="title function_">getReqHeader</span>(<span class="string">&quot;Accept&quot;</span>),</span><br><span class="line">				<span class="string">&#x27;Accept-Language&#x27;</span>: <span class="title function_">getReqHeader</span>(<span class="string">&quot;Accept-Language&quot;</span>),</span><br><span class="line">				<span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="title function_">getReqHeader</span>(<span class="string">&quot;Accept-Encoding&quot;</span>),</span><br><span class="line">				<span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">				<span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;max-age=0&#x27;</span></span><br><span class="line">			&#125;,</span><br><span class="line">			<span class="attr">cacheTtl</span>: <span class="number">3600</span> <span class="comment">// 缓存时间</span></span><br><span class="line">		&#125;;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 添加Authorization头</span></span><br><span class="line">		<span class="keyword">if</span> (request.<span class="property">headers</span>.<span class="title function_">has</span>(<span class="string">&quot;Authorization&quot;</span>)) &#123;</span><br><span class="line">			parameter.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="title function_">getReqHeader</span>(<span class="string">&quot;Authorization&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 发起请求并处理响应</span></span><br><span class="line">		<span class="keyword">let</span> original_response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="keyword">new</span> <span class="title class_">Request</span>(url, request), parameter);</span><br><span class="line">		<span class="keyword">let</span> original_response_clone = original_response.<span class="title function_">clone</span>();</span><br><span class="line">		<span class="keyword">let</span> original_text = original_response_clone.<span class="property">body</span>;</span><br><span class="line">		<span class="keyword">let</span> response_headers = original_response.<span class="property">headers</span>;</span><br><span class="line">		<span class="keyword">let</span> new_response_headers = <span class="keyword">new</span> <span class="title class_">Headers</span>(response_headers);</span><br><span class="line">		<span class="keyword">let</span> status = original_response.<span class="property">status</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 修改 Www-Authenticate 头</span></span><br><span class="line">		<span class="keyword">if</span> (new_response_headers.<span class="title function_">get</span>(<span class="string">&quot;Www-Authenticate&quot;</span>)) &#123;</span><br><span class="line">			<span class="keyword">let</span> auth = new_response_headers.<span class="title function_">get</span>(<span class="string">&quot;Www-Authenticate&quot;</span>);</span><br><span class="line">			<span class="keyword">let</span> re = <span class="keyword">new</span> <span class="title class_">RegExp</span>(auth_url, <span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">			new_response_headers.<span class="title function_">set</span>(<span class="string">&quot;Www-Authenticate&quot;</span>, response_headers.<span class="title function_">get</span>(<span class="string">&quot;Www-Authenticate&quot;</span>).<span class="title function_">replace</span>(re, workers_url));</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 处理重定向</span></span><br><span class="line">		<span class="keyword">if</span> (new_response_headers.<span class="title function_">get</span>(<span class="string">&quot;Location&quot;</span>)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="title function_">httpHandler</span>(request, new_response_headers.<span class="title function_">get</span>(<span class="string">&quot;Location&quot;</span>));</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 返回修改后的响应</span></span><br><span class="line">		<span class="keyword">let</span> response = <span class="keyword">new</span> <span class="title class_">Response</span>(original_text, &#123;</span><br><span class="line">			status,</span><br><span class="line">			<span class="attr">headers</span>: new_response_headers</span><br><span class="line">		&#125;);</span><br><span class="line">		<span class="keyword">return</span> response;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理HTTP请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Request</span>&#125; req 请求对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; pathname 请求路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">httpHandler</span>(<span class="params">req, pathname</span>) &#123;</span><br><span class="line">	<span class="keyword">const</span> reqHdrRaw = req.<span class="property">headers</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 处理预检请求</span></span><br><span class="line">	<span class="keyword">if</span> (req.<span class="property">method</span> === <span class="string">&#x27;OPTIONS&#x27;</span> &amp;&amp;</span><br><span class="line">		reqHdrRaw.<span class="title function_">has</span>(<span class="string">&#x27;access-control-request-headers&#x27;</span>)</span><br><span class="line">	) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">null</span>, <span class="variable constant_">PREFLIGHT_INIT</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">let</span> rawLen = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">const</span> reqHdrNew = <span class="keyword">new</span> <span class="title class_">Headers</span>(reqHdrRaw);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">const</span> refer = reqHdrNew.<span class="title function_">get</span>(<span class="string">&#x27;referer&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">let</span> urlStr = pathname;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">const</span> urlObj = <span class="title function_">newUrl</span>(urlStr);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">RequestInit</span>&#125; */</span></span><br><span class="line">	<span class="keyword">const</span> reqInit = &#123;</span><br><span class="line">		<span class="attr">method</span>: req.<span class="property">method</span>,</span><br><span class="line">		<span class="attr">headers</span>: reqHdrNew,</span><br><span class="line">		<span class="attr">redirect</span>: <span class="string">&#x27;follow&#x27;</span>,</span><br><span class="line">		<span class="attr">body</span>: req.<span class="property">body</span></span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="keyword">return</span> <span class="title function_">proxy</span>(urlObj, reqInit, rawLen);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 代理请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">URL</span>&#125; urlObj URL对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">RequestInit</span>&#125; reqInit 请求初始化对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; rawLen 原始长度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">proxy</span>(<span class="params">urlObj, reqInit, rawLen</span>) &#123;</span><br><span class="line">	<span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(urlObj.<span class="property">href</span>, reqInit);</span><br><span class="line">	<span class="keyword">const</span> resHdrOld = res.<span class="property">headers</span>;</span><br><span class="line">	<span class="keyword">const</span> resHdrNew = <span class="keyword">new</span> <span class="title class_">Headers</span>(resHdrOld);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 验证长度</span></span><br><span class="line">	<span class="keyword">if</span> (rawLen) &#123;</span><br><span class="line">		<span class="keyword">const</span> newLen = resHdrOld.<span class="title function_">get</span>(<span class="string">&#x27;content-length&#x27;</span>) || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">		<span class="keyword">const</span> badLen = (rawLen !== newLen);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (badLen) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="title function_">makeRes</span>(res.<span class="property">body</span>, <span class="number">400</span>, &#123;</span><br><span class="line">				<span class="string">&#x27;--error&#x27;</span>: <span class="string">`bad len: <span class="subst">$&#123;newLen&#125;</span>, except: <span class="subst">$&#123;rawLen&#125;</span>`</span>,</span><br><span class="line">				<span class="string">&#x27;access-control-expose-headers&#x27;</span>: <span class="string">&#x27;--error&#x27;</span>,</span><br><span class="line">			&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">const</span> status = res.<span class="property">status</span>;</span><br><span class="line">	resHdrNew.<span class="title function_">set</span>(<span class="string">&#x27;access-control-expose-headers&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">	resHdrNew.<span class="title function_">set</span>(<span class="string">&#x27;access-control-allow-origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">	resHdrNew.<span class="title function_">set</span>(<span class="string">&#x27;Cache-Control&#x27;</span>, <span class="string">&#x27;max-age=1500&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 删除不必要的头</span></span><br><span class="line">	resHdrNew.<span class="title function_">delete</span>(<span class="string">&#x27;content-security-policy&#x27;</span>);</span><br><span class="line">	resHdrNew.<span class="title function_">delete</span>(<span class="string">&#x27;content-security-policy-report-only&#x27;</span>);</span><br><span class="line">	resHdrNew.<span class="title function_">delete</span>(<span class="string">&#x27;clear-site-data&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(res.<span class="property">body</span>, &#123;</span><br><span class="line">		status,</span><br><span class="line">		<span class="attr">headers</span>: resHdrNew</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">ADD</span>(<span class="params">envadd</span>) &#123;</span><br><span class="line">	<span class="keyword">var</span> addtext = envadd.<span class="title function_">replace</span>(<span class="regexp">/[	 |&quot;&#x27;\r\n]+/g</span>, <span class="string">&#x27;,&#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/,+/g</span>, <span class="string">&#x27;,&#x27;</span>);	<span class="comment">// 将空格、双引号、单引号和换行符替换为逗号</span></span><br><span class="line">	<span class="keyword">if</span> (addtext.<span class="title function_">charAt</span>(<span class="number">0</span>) == <span class="string">&#x27;,&#x27;</span>) addtext = addtext.<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">if</span> (addtext.<span class="title function_">charAt</span>(addtext.<span class="property">length</span> - <span class="number">1</span>) == <span class="string">&#x27;,&#x27;</span>) addtext = addtext.<span class="title function_">slice</span>(<span class="number">0</span>, addtext.<span class="property">length</span> - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">const</span> add = addtext.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">	<span class="keyword">return</span> add;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>点击<strong>部署</strong>就可以用了,如果被墙绑定一下自定义域名</p>
]]></content>
      <tags>
        <tag>CloudFlare</tag>
        <tag>代理</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>QQ音乐sign参数逆向</title>
    <url>/2025/03/23/QQMusicSign/</url>
    <content><![CDATA[<p>记一次QQ音乐推荐歌单的sign值逆向过程</p>
<h2 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h2><p>打开F12,点击QQ音乐的推荐歌单,可知<code>https://u6.y.qq.com/cgi-bin/musics.fcg?_=1742693335800&amp;sign=zzcecbb419p7k2j0ebwdn0bzilh7zdzjrqzo046bf9695</code>为目标</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323092941467.png" alt="image-20250323092940341"></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323093023685.png" alt="image-20250323093022964"></p>
<p>有两个参数,<code>_</code>和<code>sign</code>,由内容<code>1742693335800</code>推测<code>_</code>为当前13位时间戳不需要管,<code>sign</code>为需要逆向的内容,再看请求体为</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;comm&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;cv&quot;</span><span class="punctuation">:</span><span class="number">4747474</span><span class="punctuation">,</span><span class="attr">&quot;ct&quot;</span><span class="punctuation">:</span><span class="number">24</span><span class="punctuation">,</span><span class="attr">&quot;format&quot;</span><span class="punctuation">:</span><span class="string">&quot;json&quot;</span><span class="punctuation">,</span><span class="attr">&quot;inCharset&quot;</span><span class="punctuation">:</span><span class="string">&quot;utf-8&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outCharset&quot;</span><span class="punctuation">:</span><span class="string">&quot;utf-8&quot;</span><span class="punctuation">,</span><span class="attr">&quot;notice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;platform&quot;</span><span class="punctuation">:</span><span class="string">&quot;yqq.json&quot;</span><span class="punctuation">,</span><span class="attr">&quot;needNewCode&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;uin&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;g_tk_new_20200303&quot;</span><span class="punctuation">:</span><span class="number">5381</span><span class="punctuation">,</span><span class="attr">&quot;g_tk&quot;</span><span class="punctuation">:</span><span class="number">5381</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;req_1&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;param&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;caller&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;category_id&quot;</span><span class="punctuation">:</span><span class="number">3248</span><span class="punctuation">,</span><span class="attr">&quot;size&quot;</span><span class="punctuation">:</span><span class="number">20</span><span class="punctuation">,</span><span class="attr">&quot;page&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;use_page&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;method&quot;</span><span class="punctuation">:</span><span class="string">&quot;get_category_content&quot;</span><span class="punctuation">,</span><span class="attr">&quot;module&quot;</span><span class="punctuation">:</span><span class="string">&quot;music.playlist.PlayListCategory&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;req_2&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;method&quot;</span><span class="punctuation">:</span><span class="string">&quot;get_category_basic&quot;</span><span class="punctuation">,</span><span class="attr">&quot;module&quot;</span><span class="punctuation">:</span><span class="string">&quot;playlist.PlayListCategoryServer&quot;</span><span class="punctuation">,</span><span class="attr">&quot;param&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;caller&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;category_id&quot;</span><span class="punctuation">:</span><span class="number">3248</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">:</span> </span><br></pre></td></tr></table></figure>

<p>并没有什么加密参数,忽略</p>
<h2 id="逆向sign"><a href="#逆向sign" class="headerlink" title="逆向sign"></a>逆向sign</h2><p>搜索关键词<code>sign:</code>由<code>cgi-bin/musicu.fcg</code>推测这部分就是需要断点的内容,有两个带有<code>cgi-bin/musicu.fcg</code>的,都下一个断点</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323093510280.png" alt="image-20250323093509541"></p>
<p>下好断点,点击其他歌单,发现断在了第一个断点处,分析参数可知<code>i</code>的值即为<code>sign</code>值</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323093720907.png" alt="image-20250323093720161"></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">i = <span class="string">&quot;GET&quot;</span> === t.<span class="property">type</span>.<span class="title function_">toUpperCase</span>() ? <span class="title function_">o</span>(t.<span class="property">data</span>.<span class="property">data</span>) : <span class="title function_">o</span>(t.<span class="property">data</span>)</span><br></pre></td></tr></table></figure>

<p>由抓包得知该请求是<strong>POST</strong>请求,所以<code>i</code>的值是<code>o(t.data)</code>计算出来的,验证</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323094015624.png" alt="image-20250323094014941"></p>
<p>打印一下<code>t.data</code>的值为</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;comm&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;cv&quot;</span><span class="punctuation">:</span><span class="number">4747474</span><span class="punctuation">,</span><span class="attr">&quot;ct&quot;</span><span class="punctuation">:</span><span class="number">24</span><span class="punctuation">,</span><span class="attr">&quot;format&quot;</span><span class="punctuation">:</span><span class="string">&quot;json&quot;</span><span class="punctuation">,</span><span class="attr">&quot;inCharset&quot;</span><span class="punctuation">:</span><span class="string">&quot;utf-8&quot;</span><span class="punctuation">,</span><span class="attr">&quot;outCharset&quot;</span><span class="punctuation">:</span><span class="string">&quot;utf-8&quot;</span><span class="punctuation">,</span><span class="attr">&quot;notice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;platform&quot;</span><span class="punctuation">:</span><span class="string">&quot;yqq.json&quot;</span><span class="punctuation">,</span><span class="attr">&quot;needNewCode&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;uin&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;g_tk_new_20200303&quot;</span><span class="punctuation">:</span><span class="number">5381</span><span class="punctuation">,</span><span class="attr">&quot;g_tk&quot;</span><span class="punctuation">:</span><span class="number">5381</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;req_1&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;param&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;caller&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;category_id&quot;</span><span class="punctuation">:</span><span class="number">3248</span><span class="punctuation">,</span><span class="attr">&quot;size&quot;</span><span class="punctuation">:</span><span class="number">20</span><span class="punctuation">,</span><span class="attr">&quot;page&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;use_page&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;method&quot;</span><span class="punctuation">:</span><span class="string">&quot;get_category_content&quot;</span><span class="punctuation">,</span><span class="attr">&quot;module&quot;</span><span class="punctuation">:</span><span class="string">&quot;music.playlist.PlayListCategory&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;req_2&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;method&quot;</span><span class="punctuation">:</span><span class="string">&quot;get_category_basic&quot;</span><span class="punctuation">,</span><span class="attr">&quot;module&quot;</span><span class="punctuation">:</span><span class="string">&quot;playlist.PlayListCategoryServer&quot;</span><span class="punctuation">,</span><span class="attr">&quot;param&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;caller&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;category_id&quot;</span><span class="punctuation">:</span><span class="number">3248</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>与上方请求体一致,接下来进入<code>o</code>函数内部,可以看到是webpack打包的</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323094209238.png" alt="image-20250323094208545"></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323102424276.png" alt="image-20250323102423597"></p>
<p>接下来需要寻找加载器了,在<code>n(80)</code>打上断点,进入到<code>n</code>,加载器就是</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">d</span>(<span class="params">t</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a[t])</span><br><span class="line">        <span class="keyword">return</span> a[t].<span class="property">exports</span>;</span><br><span class="line">    <span class="keyword">var</span> r = a[t] = &#123;</span><br><span class="line">        <span class="attr">i</span>: t,</span><br><span class="line">        <span class="attr">l</span>: !<span class="number">1</span>,</span><br><span class="line">        <span class="attr">exports</span>: &#123;&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> e[t].<span class="title function_">call</span>(r.<span class="property">exports</span>, r, r.<span class="property">exports</span>, d),</span><br><span class="line">    r.<span class="property">l</span> = !<span class="number">0</span>,</span><br><span class="line">    r.<span class="property">exports</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将加载器所在的<strong>js</strong>文件全部<strong>copy</strong>出来,先直接运行看看</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323102910013.png" alt="image-20250323102909068"></p>
<p>缺少<code>window</code>,那就直接在文件顶部赋值一个<code>window</code>和<code>ml</code>用来导出函数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable language_">window</span> = <span class="variable language_">global</span></span><br><span class="line"><span class="keyword">let</span> ml</span><br></pre></td></tr></table></figure>

<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323103757749.png" alt="image-20250323103757091"></p>
<p>在最后将加载器<code>d</code>赋值<code>ml</code>导出</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323103121817.png" alt="image-20250323103121162"></p>
<p>再次运行,没有报错,那就将<code>o</code>所在的函数全部抠出来</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323103347485.png"></p>
<p>在加载器部分和文件最后打印,查看缺少哪些模块</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(t) <span class="comment">//在加载器return之前</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">ml</span>(<span class="number">0</span>)) <span class="comment">//在文件最后</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323104434320.png" alt="image-20250323104433601"></p>
<p>可知缺少<code>80</code>模块,接下来寻找<code>80</code>模块</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323104639873.png" alt="image-20250323104639181"></p>
<p>可知<code>80</code>模块为</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> n;</span><br><span class="line">    n = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">    &#125;();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        n = n || <span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&quot;return this&quot;</span>)()</span><br><span class="line">    &#125; <span class="keyword">catch</span> (r) &#123;</span><br><span class="line">        <span class="string">&quot;object&quot;</span> === <span class="keyword">typeof</span> <span class="variable language_">window</span> &amp;&amp; (n = <span class="variable language_">window</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    e.<span class="property">exports</span> = n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323104752495.png" alt="image-20250323104751741"></p>
<p>复制到代码,将原本的<code>n(80)</code>改成<code>n(1)</code>再次运行可发现不缺任何模块了</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323104851847.png" alt="image-20250323104851149"></p>
<p>将<code>t.data</code>传入看看结果</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> data = <span class="string">&#x27;&#123;&quot;comm&quot;:&#123;&quot;cv&quot;:4747474,&quot;ct&quot;:24,&quot;format&quot;:&quot;json&quot;,&quot;inCharset&quot;:&quot;utf-8&quot;,&quot;outCharset&quot;:&quot;utf-8&quot;,&quot;notice&quot;:0,&quot;platform&quot;:&quot;yqq.json&quot;,&quot;needNewCode&quot;:1,&quot;uin&quot;:0,&quot;g_tk_new_20200303&quot;:5381,&quot;g_tk&quot;:5381&#125;,&quot;req_1&quot;:&#123;&quot;module&quot;:&quot;music.musicsearch.HotkeyService&quot;,&quot;method&quot;:&quot;GetHotkeyForQQMusicMobile&quot;,&quot;param&quot;:&#123;&quot;searchid&quot;:&quot;25206183845204131&quot;,&quot;remoteplace&quot;:&quot;txt.yqq.top&quot;,&quot;from&quot;:&quot;yqqweb&quot;&#125;&#125;,&quot;req_2&quot;:&#123;&quot;module&quot;:&quot;yqq.WhiteListServer&quot;,&quot;method&quot;:&quot;Pass&quot;,&quot;param&quot;:&#123;&#125;&#125;,&quot;req_3&quot;:&#123;&quot;module&quot;:&quot;music.paycenterapi.LoginStateVerificationApi&quot;,&quot;method&quot;:&quot;GetChargeAccount&quot;,&quot;param&quot;:&#123;&quot;appid&quot;:&quot;mlive&quot;&#125;&#125;&#125;&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">ml</span>(<span class="number">0</span>).<span class="title function_">default</span>(data))</span><br></pre></td></tr></table></figure>

<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323105114262.png" alt="image-20250323105113538"></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323105133760.png" alt="image-20250323105133059"></p>
<p>对比发现结果并不一致,这就需要补环境了(</p>
<p>用蜜汁小脚本吐一下环境</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span> = <span class="variable language_">global</span></span><br><span class="line">navigator = &#123;&#125;</span><br><span class="line">location= &#123;&#125;</span><br><span class="line"><span class="variable language_">document</span> = &#123;&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getEnv</span>(<span class="params">proxy_array</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;proxy_array.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        handler = <span class="string">`&#123;</span></span><br><span class="line"><span class="string">            get: function(target, property, receiver) &#123;</span></span><br><span class="line"><span class="string">                   console.log(&#x27;方法：get&#x27;,&#x27;    对象：<span class="subst">$&#123;proxy_array[i]&#125;</span>&#x27;,&#x27;    属性：&#x27;,property,&#x27;    属性类型：&#x27;,typeof property,&#x27;    属性值类型：&#x27;,typeof target[property]);</span></span><br><span class="line"><span class="string">                   return target[property];</span></span><br><span class="line"><span class="string">            &#125;,</span></span><br><span class="line"><span class="string">            set: function(target, property, value, receiver)&#123;</span></span><br><span class="line"><span class="string">                    console.log(&#x27;方法：set&#x27;,&#x27;    对象：<span class="subst">$&#123;proxy_array[i]&#125;</span>&#x27;,&#x27;    属性：&#x27;,property,&#x27;    属性类型：&#x27;,typeof property,&#x27;    属性值类型：&#x27;,typeof target[property]);</span></span><br><span class="line"><span class="string">                    return Reflect.set(...arguments);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;`</span>;</span><br><span class="line">        <span class="built_in">eval</span>(<span class="string">`</span></span><br><span class="line"><span class="string">            try&#123;</span></span><br><span class="line"><span class="string">                <span class="subst">$&#123;proxy_array[i]&#125;</span>;</span></span><br><span class="line"><span class="string">                <span class="subst">$&#123;proxy_array[i]&#125;</span> = new Proxy(<span class="subst">$&#123;proxy_array[i]&#125;</span>,<span class="subst">$&#123;handler&#125;</span>);</span></span><br><span class="line"><span class="string">            &#125;catch(e)&#123;</span></span><br><span class="line"><span class="string">                <span class="subst">$&#123;proxy_array[i]&#125;</span>=&#123;&#125;;</span></span><br><span class="line"><span class="string">                <span class="subst">$&#123;proxy_array[i]&#125;</span> = new Proxy(<span class="subst">$&#123;proxy_array[i]&#125;</span>,<span class="subst">$&#123;handler&#125;</span>);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        `</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">proxy_array = [<span class="string">&#x27;window&#x27;</span>,<span class="string">&#x27;document&#x27;</span>,<span class="string">&#x27;location&#x27;</span>, <span class="string">&#x27;navigator&#x27;</span>, <span class="string">&#x27;history&#x27;</span>, <span class="string">&#x27;screen&#x27;</span>, <span class="string">&#x27;history&#x27;</span>]</span><br><span class="line"><span class="title function_">getEnv</span>(proxy_array);</span><br></pre></td></tr></table></figure>

<div class="note warning flat"><p>这里补药用ES模块!!!</p>
</div>

<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323112913664.png" alt="image-20250323112912881"></p>
<p>将缺失的环境补上</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">location = &#123;</span><br><span class="line">    <span class="string">&quot;host&quot;</span>: <span class="string">&quot;y.qq.com&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">navigator = &#123;</span><br><span class="line">    <span class="attr">appName</span>: <span class="string">&quot;Netscape&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250323113132254.png" alt="image-20250323113131498"></p>
<p>比较数据与接口返回一致,完事</p>
]]></content>
      <tags>
        <tag>逆向</tag>
        <tag>web逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/11/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>个人整理的一些获取IP信息的接口</title>
    <url>/2025/04/04/ipapi/</url>
    <content><![CDATA[<h2 id="获取本机IP"><a href="#获取本机IP" class="headerlink" title="获取本机IP"></a>获取本机IP</h2><h3 id="bilibili"><a href="#bilibili" class="headerlink" title="bilibili"></a>bilibili</h3><p>获取当前 IP 地址 以及大概位置的接口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.bilibili.com/x/web-interface/zone</span><br></pre></td></tr></table></figure>
<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ttl&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;addr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;23.95.20.176&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;美国&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;province&quot;</span><span class="punctuation">:</span> <span class="string">&quot;加利福尼亚州&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;圣克拉拉&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;colocrossing.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;latitude&quot;</span><span class="punctuation">:</span> <span class="number">37.355701</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;longitude&quot;</span><span class="punctuation">:</span> <span class="number">-121.955002</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;zone_id&quot;</span><span class="punctuation">:</span> <span class="number">29409504</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;country_code&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="ip-sb"><a href="#ip-sb" class="headerlink" title="ip.sb"></a>ip.sb</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.ip.sb/ip -A Mozilla</span><br></pre></td></tr></table></figure>
<p>返回格式</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">156.238.233.37</span><br></pre></td></tr></table></figure>
<h3 id="百度云盘"><a href="#百度云盘" class="headerlink" title="百度云盘"></a>百度云盘</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://d.pcs.baidu.com/rest/2.0/pcs/file?method=locateupload</span><br></pre></td></tr></table></figure>
<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;bak_server&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;c.pcs.baidu.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;client_ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;43.134.99.64&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;error_code&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;error_msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;expire&quot;</span><span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c.pcs.baidu.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;newno&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;quic_server&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://c3.pcs.baidu.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;request_id&quot;</span><span class="punctuation">:</span> <span class="number">2.1707703965593718e+18</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;c.pcs.baidu.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;c2.pcs.baidu.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;c3.pcs.baidu.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;server_time&quot;</span><span class="punctuation">:</span> <span class="number">1743747549</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sl&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Tencent-Map"><a href="#Tencent-Map" class="headerlink" title="Tencent Map"></a>Tencent Map</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://h5gw.map.qq.com/ws/location/v1/ip?key=2J4BZ-PBHH2-VYGU4-CODCH-C4EA2-W4BAU&amp;apptag=h5loc_ip_loc&amp;output=json</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=ACEBZ-FDXWP-WFRDV-VGS5Q-S2Q5K-HQBNA</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=RMJBZ-2IP64-CSNUJ-DLU7O-O3DF7-MMB5E</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=4RYBZ-4TRHF-GDOJU-NS5TO-3PIX7-LRF5F</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=N7XBZ-NX764-OFOUH-D5LJY-KZ3QK-6WFNX</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=3JLBZ-I2OWJ-3AAFI-KDLGM-UMDPO-Q6BRM</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=EIMBZ-RBNH4-NZQUG-X7RKQ-3SPPH-YSFCX</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=IDHBZ-7F2KM-SFY6S-6OQYE-6VWRE-WVB5N</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=GWSBZ-HTTWJ-QJIF2-KLHLC-X3WKV-ZZFV6</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=T3EBZ-TJ7LI-YRBG2-5ZLUR-KD3OS-U6BJO</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=PTMBZ-GCQLW-SC2RG-R2FNI-HWPNQ-4PBQM</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=PTMBZ-GCQLW-SC2RG-R2FNI-HWPNQ-4PBQM</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=EP7BZ-JAOKQ-NIV55-GPNDX-CBPOQ-PHB7E</span><br><span class="line">https://apis.map.qq.com/ws/location/v1/ip?key=OIVBZ-MQZ6X-V2T4C-TLTXF-2X755-6CBAZ</span><br></pre></td></tr></table></figure>
<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Success&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;request_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ee7af169ec7e41338bb859ef1338b64a&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;43.134.99.64&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;location&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span> <span class="number">1.2833</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;lng&quot;</span><span class="punctuation">:</span> <span class="number">103.85</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ad_info&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;nation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;新加坡&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;province&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;district&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;adcode&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nation_code&quot;</span><span class="punctuation">:</span> <span class="number">702</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Tencent-Video"><a href="#Tencent-Video" class="headerlink" title="Tencent Video"></a>Tencent Video</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://disp-qryapi.3g.qq.com/v1/dispatch</span><br></pre></td></tr></table></figure>
<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;unitResults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ipInfo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;新加坡##未知#&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;extra&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;43.134.99.64&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="网易邮箱大师"><a href="#网易邮箱大师" class="headerlink" title="网易邮箱大师"></a>网易邮箱大师</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://dashi.163.com/fgw/mailsrv-ipdetail/detail</span><br></pre></td></tr></table></figure>

<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DONE&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;success&quot;</span><span class="punctuation">:</span> <span class="string">&quot;false&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;新加坡&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;province&quot;</span><span class="punctuation">:</span> <span class="string">&quot;新加坡&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;provinceEn&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Nordrhein-Westfalen&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;新加坡&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;org&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6 COLLYER QUAY&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;腾讯&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latitude&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.3667&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;longitude&quot;</span><span class="punctuation">:</span> <span class="string">&quot;103.8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Asia/Singapore&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;countryCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SG&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;continentCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AS&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;provinceCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UNKNOWN&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;continent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;亚洲&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;county&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UNKNOWN&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ispId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;43.134.99.64&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;zone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gz&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="央视网"><a href="#央视网" class="headerlink" title="央视网"></a>央视网</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://ip.apps.cntv.cn/whereis?client=json</span><br></pre></td></tr></table></figure>
<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;isp_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;province_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;country_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SG&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;43.134.99.64&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="美图设计室"><a href="#美图设计室" class="headerlink" title="美图设计室"></a>美图设计室</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://webapi.designkit.com/common/ip_location</span><br></pre></td></tr></table></figure>

<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;reqid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;b9b36cc1-4838-4c0b-9efe-4dd058a57087&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;43.134.99.64&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;area_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Singapore&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;city_id&quot;</span><span class="punctuation">:</span> <span class="number">160024281</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;continent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;continent_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AP&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;country_id&quot;</span><span class="punctuation">:</span> <span class="number">17020000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;腾讯&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;latitude&quot;</span><span class="punctuation">:</span> <span class="number">1.286529</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;longitude&quot;</span><span class="punctuation">:</span> <span class="number">103.853519</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Singapore&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nation_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SG&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;province&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Singapore&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;province_id&quot;</span><span class="punctuation">:</span> <span class="number">160024280</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;subdivision_1_iso_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;subdivision_1_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Singapore&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;subdivision_2_iso_code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;subdivision_2_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Singapore&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;time_zone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UTC+8&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="12306"><a href="#12306" class="headerlink" title="12306"></a>12306</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://exservice.12306.cn/excater/bonree/grip</span><br></pre></td></tr></table></figure>

<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;di&quot;</span><span class="punctuation">:</span> <span class="string">&quot;43.134.99.64&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="获取指定IP"><a href="#获取指定IP" class="headerlink" title="获取指定IP"></a>获取指定IP</h2><h3 id="ipinfo"><a href="#ipinfo" class="headerlink" title="ipinfo"></a>ipinfo</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://ipinfo.io/$&#123;ip&#125;/json</span><br></pre></td></tr></table></figure>
<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;156.238.233.37&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Tseung Kwan O&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;region&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Sai Kung&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HK&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;loc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;22.3279,114.2499&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;org&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AS137899 I LAYER LIMITED&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;postal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999077&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Asia/Hong_Kong&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;readme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://ipinfo.io/missingauth&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="淘宝"><a href="#淘宝" class="headerlink" title="淘宝"></a>淘宝</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://ip.taobao.com/outGetIpInfo?accessKey=alibaba-inc&amp;ip=$&#123;ip&#125;</span><br></pre></td></tr></table></figure>
<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isp_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;queryIp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;114.114.114.114&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;南京&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;114.114.114.114&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;XX&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;county&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;region_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;320000&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;area_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;county_id&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;region&quot;</span><span class="punctuation">:</span> <span class="string">&quot;江苏&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;country_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CN&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;320100&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;query success&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="美团"><a href="#美团" class="headerlink" title="美团"></a>美团</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://apimobile.meituan.com/locate/v2/ip/loc?client_source=yourAppKey&amp;rgeo=true&amp;ip=$&#123;ip&#125;</span><br></pre></td></tr></table></figure>
<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;lng&quot;</span><span class="punctuation">:</span> <span class="number">113.42</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;fromwhere&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mars-mt&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.1.11.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;rgeo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;province&quot;</span><span class="punctuation">:</span> <span class="string">&quot;广东省&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;adcode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;440115&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;广州&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;district&quot;</span><span class="punctuation">:</span> <span class="string">&quot;南沙区&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span> <span class="number">22.86</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Baidu"><a href="#Baidu" class="headerlink" title="Baidu"></a>Baidu</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://sp0.baidu.com/8aQDcjqpAAV3otqbppnN2DJv/api.php?query=$&#123;ip&#125;&amp;resource_id=5809</span><br></pre></td></tr></table></figure>
<p>返回格式</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Srcid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5809&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ResultCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;QueryID&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1838400662&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Result&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;DisplayData&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;strategy&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;tempName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ip&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;precharge&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ctplOrPhp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;resultData&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;tplData&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;arrData&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;intStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;errmsg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;data_source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AE&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;extData&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;tplt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ip&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;resourceid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5809&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;OriginQuery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.1.1.1&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;ResultURL&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://www.ip138.com/&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Weight&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;SrcID&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5809&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;ClickNeed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;SubResult&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;SubResNum&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;ar_passthrough&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;RecoverCacheTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;arrData&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;intStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;errmsg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ResultNum&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>ip</tag>
        <tag>接口</tag>
        <tag>工具</tag>
        <tag>api</tag>
      </tags>
  </entry>
  <entry>
    <title>米游社登录简单逆向</title>
    <url>/2025/03/15/myslogin/</url>
    <content><![CDATA[<p>记一次简单的米游社网页端登录逆向</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为什么写这个呢? 放在文章最后</p>
<h2 id="开始逆向"><a href="#开始逆向" class="headerlink" title="开始逆向"></a>开始逆向</h2><h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3><p>打开米游社官网 <a href="https://www.miyoushe.com/ys/">原神社区-米游社</a> 直接开始抓包</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315202154513.png"></p>
<p>可以明显的看到目标链接为<code>https://passport-api.miyoushe.com/account/ma-cn-passport/web/loginByPassword</code></p>
<h3 id="参数分析"><a href="#参数分析" class="headerlink" title="参数分析"></a>参数分析</h3><p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315202258161.png"></p>
<p>有两个参数需要分析,<code>account</code>和<code>password</code></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315202634535.png"></p>
<p>直接搜索<code>password</code>并在可疑部分加上断点</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315202841852.png" alt="image-20250315202841156"></p>
<p>断在了这里,并<code>account</code>和<code>password</code>与账号密码对应正确,那就基本找对了,继续走一步</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315203031726.png" alt="image-20250315203031052"></p>
<p>根据函数名推断<code>a.Z.encrypt</code>就是需要找的加密函数</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315203144747.png" alt="image-20250315203144027"></p>
<p>控制台打印一下,更像了,跳到该函数,打上断点</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315203236032.png" alt="image-20250315203235391"></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315203420362.png" alt="image-20250315203419641"></p>
<p><code>t</code>为</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;errorToast&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;errorH5log&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;errorH5logAdditionalData&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;account&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11111111111&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;headers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;x-rpc-source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;v2.webLogin&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p><code>encrypt</code>函数为</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315203928101.png" alt="image-20250315203927417"></p>
<p>跳入<code>this.getKey()</code>函数</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315204726743.png" alt="image-20250315204725973"></p>
<p>很明显就能看到</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">key</span> = <span class="keyword">new</span> ct</span><br></pre></td></tr></table></figure>

<p>初步推断,这就是公钥参数,进入<code>ct</code>函数,打上断点</p>
<p>没断下来,应该是存储在全局变量了,刷新网页,在打着断点的情况下再次点击登录</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315205136334.png" alt="image-20250315205135654"></p>
<p>断下来了,看到了参数<code>n</code>,尚不能确定,跟栈看看</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315205235034.png" alt="image-20250315205234310"></p>
<p>跟栈发现参数<code>n</code>是<strong>明文</strong>存储在js代码中的</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">i.<span class="title function_">setPublicKey</span>(<span class="string">&quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDDvekdPMHN3AYhm/vktJT+YJr7\ncI5DcsNKqdsx5DZX0gDuWFuIjzdwButrIYPNmRJ1G8ybDIF7oDW2eEpm5sMbL9zs\n9ExXCdvqrn51qELbqj0XxtMTIpaCHFSI50PfPpTFV9Xt/hmyVwokoOXFlAEgCn+Q\nCgGs52bFoYMtyi+xEQIDAQAB&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>观察发现存在换行符,推测为公钥,这样,参数差不多逆向完了,完整代码就不放出了</p>
<h2 id="事出有因"><a href="#事出有因" class="headerlink" title="事出有因"></a>事出有因</h2><p>为什么我闲的去逆向一个别人早就逆向完了的网站呢(PS:如果还有问题可以按照我的步骤重新逆向米游社)</p>
<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>已经不能说是几天前了,应该是几个月前(该篇文章写于2025年3月15日晚),我发现有人大范围说<strong>Yunzai Bot</strong>存在盗取米哈游账号的后门</p>
<p>了解得知,是名为<strong>TRSS-Plugin</strong>的插件存在米游社登录功能,部分代码截图如下</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315210744743.png" alt="image-20250315210743994"></p>
<p>其中的一部分参数导致部分人认为开发者具有盗取账号的能力</p>
<div class="note warning simple"><p>我已阅读并了解了TRSS-Plugin远程命令后门,该篇文章仅澄清所谓米游社盗号问题</p>
</div>

<p>其中部分谣言如下</p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315210420879.png" alt="image-20250315210420148"></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315210510475.png" alt="image-20250315210509527"></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315210558062.png" alt="image-20250315210557082"></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315210623006.png" alt="image-20250315210622031"></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315210636189.png" alt="image-20250315210635542"></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315212859173.png"></p>
<p><img src="https://image.blog.mapleleaf.icu/img/imgs/20250315212947049.png"></p>
<p>在此,需要澄清几个概念,来让<strong>ChatGPT</strong>解释一下吧</p>
<p>在米游社登录过程中，<code>BEGIN PUBLIC KEY</code> 代表的是 <strong>公钥</strong>，而不是密码学中的 <strong>盐（Salt）</strong>。误认为它是盐是对密码学概念的误解。</p>
<h3 id="1-公钥（Public-Key）"><a href="#1-公钥（Public-Key）" class="headerlink" title="1. 公钥（Public Key）"></a>1. <strong>公钥（Public Key）</strong></h3><ul>
<li>这是 <strong>非对称加密</strong>（如 RSA、ECC）中的一部分，通常用于加密数据或验证签名。</li>
<li>在客户端登录时，公钥用于 <strong>加密用户输入的密码</strong>，然后再发送给服务器，以避免密码在传输过程中被截获。</li>
<li>公钥是 <strong>公开的</strong>，就算泄露也不会影响安全性，关键在于私钥的保护。</li>
<li>服务器端使用对应的 <strong>私钥（Private Key）</strong> 解密数据，并验证用户身份。</li>
</ul>
<h3 id="2-盐（Salt）"><a href="#2-盐（Salt）" class="headerlink" title="2. 盐（Salt）"></a>2. <strong>盐（Salt）</strong></h3><ul>
<li><strong>盐是用于哈希（Hash）密码的额外随机数据</strong>，目的是防止彩虹表攻击。</li>
<li>在存储密码时，通常会使用 <strong>哈希算法（如 SHA-256、bcrypt）</strong> 处理，盐的作用是增加唯一性，即使两个用户的密码相同，加盐后的哈希结果也不同。</li>
<li>盐通常是 <strong>随机生成的</strong>，而不是固定值，否则容易被攻击。</li>
</ul>
<h3 id="公钥和盐的区别"><a href="#公钥和盐的区别" class="headerlink" title="公钥和盐的区别"></a><strong>公钥和盐的区别</strong></h3><table>
<thead>
<tr>
<th>对比项</th>
<th>公钥（Public Key）</th>
<th>盐（Salt）</th>
</tr>
</thead>
<tbody><tr>
<td>作用</td>
<td>加密数据，保护传输安全</td>
<td>增强哈希安全性，防止彩虹表攻击</td>
</tr>
<tr>
<td>是否公开</td>
<td>公开（仅公钥）</td>
<td>私有（但存储在数据库中，与哈希一起使用）</td>
</tr>
<tr>
<td>是否用于哈希</td>
<td>否</td>
<td>是</td>
</tr>
<tr>
<td>是否用于加密</td>
<td>是</td>
<td>否</td>
</tr>
<tr>
<td>服务器使用</td>
<td>用私钥解密数据</td>
<td>结合哈希存储用户密码</td>
</tr>
</tbody></table>
<h3 id="为什么公钥不是盐，也不会盗取密码？"><a href="#为什么公钥不是盐，也不会盗取密码？" class="headerlink" title="为什么公钥不是盐，也不会盗取密码？"></a><strong>为什么公钥不是盐，也不会盗取密码？</strong></h3><ul>
<li>公钥 <strong>不会参与密码哈希</strong>，仅用于 <strong>加密密码</strong>，确保用户输入的密码在网络传输过程中不会被中间人窃取。</li>
<li>服务器只会存储哈希值，而不会直接存储明文密码，即使数据库泄露，攻击者也无法直接获取用户密码。</li>
<li>盐是用于哈希，而公钥是用于加密，两者在作用上完全不同。</li>
</ul>
<p>所谓的<strong>噪声</strong>,<strong>处理器速度</strong>,<strong>电压</strong>更是无稽之谈,Web端没有权限读取这些信息,更不可能那这些信息去加密了.</p>
<h3 id="在此呼吁"><a href="#在此呼吁" class="headerlink" title="在此呼吁"></a>在此呼吁</h3><p><strong>1. 理性思考，避免盲目跟从</strong><br> 在网络上看到某些说法时，<strong>不要急于相信或传播</strong>，而是要先了解事实并核实信息来源。如果只是因为看到别人说“有问题”就盲目认同，可能会导致误导甚至制造谣言。</p>
<p><strong>2. 了解技术原理，避免误解</strong></p>
<ul>
<li><code>BEGIN PUBLIC KEY</code> 是公钥的一部分，主要用于<strong>加密传输</strong>，而不是存储或处理密码。</li>
<li>在密码学中，<strong>公钥加密用于保护数据，而不是泄露数据</strong>。它的作用是防止密码在网络传输时被窃取，而不是用来“固定盐”或“存储密码”。</li>
<li>真正的密码存储安全性取决于服务器端的哈希与加盐处理，而不是传输时使用的公钥。</li>
</ul>
<p><strong>3. 质疑之前，请找证据</strong><br> 如果认为某个机制存在问题，应该提供<strong>技术性证据</strong>，比如<strong>代码分析、流量抓包、数据库泄露报告</strong>等，而不是单纯凭借“有人说”或主观猜测。<br> 盲目指责开发者可能会引发不必要的恐慌，也会让真正的安全问题被忽略。</p>
<p><strong>4. 避免传播未经证实的信息</strong><br> 在不了解技术背景的情况下，随意传播“某平台会窃取账号”这样的言论，可能会造成误导。如果信息有误，可能会影响他人的判断，甚至损害平台的声誉。</p>
<p><strong>5. 关注真正的账号安全</strong><br> 与其担心<strong>不存在的风险</strong>，不如<strong>加强自身的安全意识</strong>：<br> ✅ <strong>使用独立、强密码</strong>，避免多个网站使用相同密码。<br> ✅ <strong>开启二步验证（2FA）</strong>，即使密码泄露也能保护账号。<br> ✅ <strong>警惕钓鱼网站</strong>，不要轻易输入账号密码到陌生网页。</p>
<p>总之，保持理性，独立思考，质疑要有依据，传播要负责任。<br> 对于任何技术问题，<strong>可以讨论，但要基于事实，而不是臆测，更不能以讹传讹，扭曲事实</strong></p>
]]></content>
      <tags>
        <tag>逆向</tag>
        <tag>web逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>npm,pnpm,yarn换源</title>
    <url>/2024/12/02/npm-pnpm-yarn%E6%8D%A2%E6%BA%90/</url>
    <content><![CDATA[<h1 id="npm-pnpm-yarn换源以及一些问题"><a href="#npm-pnpm-yarn换源以及一些问题" class="headerlink" title="npm,pnpm,yarn换源以及一些问题"></a>npm,pnpm,yarn换源以及一些问题</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用<em>npm,pnpm,yarn</em>时经常出现网络问题,选择并配置国内镜像源可以显著提高包的下载速度和稳定性。</p>
<h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><p><strong>查询当前源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm get registry</span><br></pre></td></tr></table></figure>

<p><strong>设置淘宝镜像源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<p>如果出现一些问题可以换回<strong>官方源</strong>重试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure>

<p>npm首次运行时会出现</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm : 无法加载文件 C:\Users\用户名\software\nodejs\npm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execu</span><br><span class="line">tion_Policies。</span><br><span class="line">所在位置 行:1 字符: 1</span><br><span class="line">+ npm run start</span><br><span class="line">+ ~~~</span><br><span class="line">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br></pre></td></tr></table></figure>

<p>解决办法: 使用<strong>管理员权限</strong>打开<em>CMD</em>或者<em>PowerShell</em>执行下面的命令将计算机上的执行策略更改为 <em>RemoteSigned</em></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure>

<h2 id="pnpm"><a href="#pnpm" class="headerlink" title="pnpm"></a>pnpm</h2><p><strong>安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install pnpm -g</span><br></pre></td></tr></table></figure>

<p><strong>查询当前源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pnpm get registry</span><br></pre></td></tr></table></figure>

<p><strong>设置淘宝镜像源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pnpm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<p><strong>换回官方源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pnpm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure>

<h2 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h2><p><strong>安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install yarn -g</span><br></pre></td></tr></table></figure>

<p><strong>查询当前源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config get registry</span><br></pre></td></tr></table></figure>

<p><strong>设置淘宝镜像源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<p><strong>换回官方源</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config <span class="built_in">set</span> registry https://registry.yarnpkg.com</span><br></pre></td></tr></table></figure>

<h2 id="拓展-使用nrm切换镜像源"><a href="#拓展-使用nrm切换镜像源" class="headerlink" title="拓展:使用nrm切换镜像源"></a>拓展:使用<em>nrm</em>切换镜像源</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>nrm（npm registry manager）是一个<strong>npm</strong>源管理工具，它可以帮助用户快速地在不同的<strong>npm</strong>源之间切换，以提高包的下载速度和稳定性</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install nrm -g</span><br></pre></td></tr></table></figure>

<h3 id="查看可选择的源"><a href="#查看可选择的源" class="headerlink" title="查看可选择的源"></a>查看可选择的源</h3><p>安装完成后，你可以使用以下命令查看所有可用的 npm 源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p>这将列出所有已知的<strong>npm</strong>源，包括官方源和你可能添加的自定义源。</p>
<h3 id="切换镜像源"><a href="#切换镜像源" class="headerlink" title="切换镜像源"></a>切换镜像源</h3><p>要切换到特定的源，执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm use &lt;镜像源名称&gt;</span><br></pre></td></tr></table></figure>

<p>例如，如果你想切换到淘宝的<strong>npm</strong>镜像源，你可以执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm use taobao</span><br></pre></td></tr></table></figure>

<p>其他同理</p>
<h3 id="增加镜像源"><a href="#增加镜像源" class="headerlink" title="增加镜像源"></a>增加镜像源</h3><p>如果给出的镜像源没有你想用的,你可以增加定制的源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm add &lt;镜像源名称&gt; &lt;镜像源地址&gt;</span><br></pre></td></tr></table></figure>

<h3 id="删除镜像源"><a href="#删除镜像源" class="headerlink" title="删除镜像源"></a>删除镜像源</h3><p>如果你想要删除一个已添加的源，可以使用以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm del &lt;镜像源名称&gt;</span><br></pre></td></tr></table></figure>

<p>例如，删除 <code>淘宝</code> 的镜像源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm del taobao</span><br></pre></td></tr></table></figure>

<h3 id="测试镜像源的速度"><a href="#测试镜像源的速度" class="headerlink" title="测试镜像源的速度"></a>测试镜像源的速度</h3><p><code>nrm</code> 支持通过 <code>nrm test</code> 命令测试相应源的响应时间，以选择适合的镜像源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm <span class="built_in">test</span> &lt;registry&gt;</span><br></pre></td></tr></table></figure>

<p>例如，测试 <code>npm</code> 源的响应时间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm <span class="built_in">test</span> npm</span><br></pre></td></tr></table></figure>

<p>你也可以直接测试所有源的响应时间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm <span class="built_in">test</span></span><br></pre></td></tr></table></figure>

<div class="note warning simple"><p><strong>注意版本</strong>：从 nrm v1.4.0 开始，最低支持的 Node 版本是 18</p>
</div>
]]></content>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>MicrosoftStore安装ubuntu出现0x8007019e</title>
    <url>/2025/01/06/wslubuntu0x8007019e/</url>
    <content><![CDATA[<h2 id="前倾概要0x8007019e"><a href="#前倾概要0x8007019e" class="headerlink" title="前倾概要0x8007019e"></a>前倾概要0x8007019e</h2><p>在<strong>Microsoft Store</strong>安装<strong>Ubuntu</strong>打开后显示错误码<code>0x8007019e</code></p>
<p><img src="https://gitea.fireflyz.cc/MapleLeaf/images/raw/branch/main/img/20250106130623701.png" alt="image-20250106130623453"></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p><img src="https://gitea.fireflyz.cc/MapleLeaf/images/raw/branch/main/img/20250106130853079.png" alt="image-20250106130852604"></p>
<p>以管理员权限打开<strong>PowerShell</strong>,输入</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure>

<p>安装 Windows 的子系统支持</p>
<p><img src="https://gitea.fireflyz.cc/MapleLeaf/images/raw/branch/main/img/20250106131007713.png" alt="image-20250106131007427"></p>
<p>输入<code>Y</code>或直接回车重启电脑以应用</p>
<h2 id="不是-哥们-0x800701bc"><a href="#不是-哥们-0x800701bc" class="headerlink" title="不是,哥们,0x800701bc"></a>不是,哥们,0x800701bc</h2><p><img src="https://gitea.fireflyz.cc/MapleLeaf/images/raw/branch/main/img/20250106131627501.png" alt="image-20250106131627145"></p>
<p>变成了错误码<code>0x800701bc</code>需要升级一下内核</p>
<p>下载<a href="https://ml2.lanzoul.com/igRUa2k3l3mh">wsl_update_x64.msi</a></p>
<div class="note warning simple"><p>由于烂走云盘的问题,需要手动把后缀名改成<code>.msi</code></p>
</div>

<p><img src="https://gitea.fireflyz.cc/MapleLeaf/images/raw/branch/main/img/20250106132301400.png" alt="image-20250106132301179"></p>
<p>直接<strong>Next</strong>即可,再次打开<strong>Ubuntu</strong>……</p>
<p><img src="https://gitea.fireflyz.cc/MapleLeaf/images/raw/branch/main/img/20250106132401952.png" alt="image-20250106132401663"></p>
<p>需要亿点点时间……</p>
<p><img src="https://gitea.fireflyz.cc/MapleLeaf/images/raw/branch/main/img/20250107100730546.png" alt="image-20250107100729933"></p>
<p>如此,便就好了</p>
]]></content>
      <tags>
        <tag>WSL</tag>
      </tags>
  </entry>
</search>
